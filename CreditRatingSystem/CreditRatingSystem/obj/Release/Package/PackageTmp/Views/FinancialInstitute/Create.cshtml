@model CreditRatingModel.Model.FinancialInstituteModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}

@*<h2>Financial Institution</h2>

<!DOCTYPE html> *@

<link href="@Url.Content("~/CSS/bootstrap-3.3.2.min.css")" rel="stylesheet" type="text/css"/>
<link href="@Url.Content("~/CSS/bootstrap-multiselect.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/CSS/prettify.css")" rel="stylesheet" />
<link href="@Url.Content("~/js/jquery-ui.css")" rel="stylesheet" />
<link href="@Url.Content("~/CSS/Comman.css")" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/jquery-2.1.4.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/js/bootstrap-3.3.2.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/js/bootstrap-multiselect.js")" type="text/javascript"></script>
<script src="@Url.Content("~/js/prettify.js")" type="text/javascript"></script>
<script src="@Url.Content("~/js/ValidationJavaScript.js")"></script>

<form id="form1" action="~/FinancialInstitute/btnAddClick">
        @using (Html.BeginForm())
        {
            <div class="row" style="height:50px">
            </div>
        <div class="container">
            <div class="panel panel-primary">
                <div class="panel-heading"> <label id="lblHeading" class="filter-col control-label labelHead">Financial Institute Master </label>  </div>
                <div class="panel-body">
                  
                    @*@Html.ValidationSummary(false, "Financial Institute Registered suceessfully")*@
                    <div id="tabs">
                        <ul>
                            <li><a href="#tabs-1">Info</a></li>
                            <li><a href="#tabs-2">Contact Info</a></li>
                        </ul>
                        <div id="tabs-1">

                            <div class="row">
                                <div class="col-xs-6">
                                    <div class="form-group">

                                        <label id="lblFIN" class="filter-col control-label label1">Financial Institute Name :</label>
                                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @id = "Name", onkeypress = "return AllowAlphabet(event)" })
                                        <div class="row-error ErrorMessage">
                                            @Html.ValidationMessageFor(model => model.Name)
                                        </div>
                                        @*<span style="color: Red">*</span>*@
                                    </div>
                                </div>
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblRN" class="filter-col control-label label1">Bank Code. :</label>
                                        @Html.TextBoxFor(model => model.BankCode, new { @class = "form-control", @id = "BankCode", onkeypress = "return isAlphaNumeric(event)", onblur = "checkLengthForBankCode(this)", maxlength = "20" })
                                        <div class="row-error ErrorMessage">
                                            @Html.ValidationMessageFor(model => model.BankCode)
                                        </div>
                                        @*<span style="color: Red">*</span>*@
                                    </div>
                                </div>
                            </div>


                            <div class="row">
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblCATE" class="filter-col control-label label1">Category :</label>
                                        @*@Html.DropDownListFor(model => model.CategoryId ,new SelectList(Model.CategoryItem, "Value", "Text") ,new { @class = "form-control dropdown" })*@
                                        @Html.DropDownListFor(model => model.CategoryId, ViewBag.Category as SelectList, "Select Category ", new { @class = "form-control dropdown" })
                                        @*<span style="color: Red">*</span>*@
                                        <div class="row-error ErrorMessage">
                                            @Html.ValidationMessageFor(model => model.CategoryId)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblBRA" class="filter-col control-label label1">Registration No. :</label>
                                        @Html.TextBoxFor(model => model.RegistrationNo, new { @class = "form-control", onkeypress = "return isAlphaNumeric(event)", onblur = "checkLength(this)", maxlength = "20" })
                                        <div class="row-error ErrorMessage">
                                            @Html.ValidationMessageFor(model => model.RegistrationNo)
                                        </div>
                                        @*<span style="color: Red">*</span>*@
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblFBN" class="filter-col control-label label1">Branch Name :</label>
                                        @Html.TextBoxFor(model => model.BranchName, new { @class = "form-control", @id = "BranchName", onkeypress = "return AllowAlphabet(event)", onblur = "checkLength(this)", maxlength = "20" })
                                        <div class="row-error ErrorMessage">
                                            @Html.ValidationMessageFor(model => model.BranchName)
                                        </div>
                                        @*<span style="color: Red">*</span>*@
                                    </div>
                                </div>
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lbBRN" class="filter-col control-label label1">Branch Code. :</label>
                                        @Html.TextBoxFor(model => model.BranchCode, new { @class = "form-control", @id = "BranchCode", onkeypress = "return isAlphaNumeric(event)", onblur = "checkLengthForBankCode(this)", maxlength = "20" })
                                        <div class="row-error ErrorMessage">
                                            @Html.ValidationMessageFor(model => model.BranchCode)
                                        </div>
                                        @*<span style="color: Red">*</span>*@
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblSC" class="filter-col control-label label1">Swift Code. :</label>
                                        @Html.TextBoxFor(model => model.SwiftCode, new { @class = "form-control", @id = "SwiftCode", onkeypress = "return isAlphaNumeric(event)", onblur = "checkLength(this)", maxlength = "20" })
                                        <div class="row-error ErrorMessage">
                                            @Html.ValidationMessageFor(model => model.SwiftCode)
                                        </div>
                                        @*<span style="color: Red">*</span>*@
                                    </div>
                                </div>
                                <div class="col-xs-6">
                                    @*      <div class="form-group">*@
                                    <label id="lblCT" class="filter-col control-label label1">Credit Type :</label>
                                    @Html.DropDownListFor(model => model.FinancialInstituteCreditTypeId, ViewBag.CreditType as SelectList, new { @id = "ddlCreditType", @class = "form-control  ", @multiple = "multiple" })
                                    @*    <label class="checkbox-inline " >
                                          <input Name="CreditType1" type="checkbox" value="1" >Credit Card
                                        </label>
                                        <label class="checkbox-inline" >
                                          <input Name="CreditType1" type="checkbox" value="2">Loan
                                        </label> *@
                                    @*@Html.DropDownList("example-getting-started", ViewBag.CreditType as SelectList ,new { @class = "form-control" ,Multiple="Multiple"})*@
                                    <div class="row-error ErrorMessage">
                                        @Html.ValidationMessageFor(model => model.FinancialInstituteCreditTypeId)
                                        @*  </div>*@
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblAdd1" class="filter-col control-label label1">Address :</label>
                                        @Html.TextBoxFor(model => model.Address1, new { @class = "form-control" })
                                        @Html.TextBoxFor(model => model.Address2, new { @class = "form-control" })
                                        @Html.TextBoxFor(model => model.Address3, new { @class = "form-control" })
                                        <div class="row-error ErrorMessage">
                                            @Html.ValidationMessageFor(model => model.Address1)
                                        </div>
                                    </div>
                                </div>
                                @*<div class="col-xs-6">
                                        <div class="form-group">
                                            <label id="lblAdd2" class="filter-col control-label label2">Address 2 :</label>
                                            @Html.TextBoxFor(model => model.Address2, new { @class = "form-control" })
                                          @*  <div class="row-error ErrorMessage">
                                                @Html.ValidationMessageFor(model => model.Address2)
                                            </div>
                                        </div>
                                    </div>*@

                            </div>
                            @*<div class="row">
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblAdd3" class="filter-col control-label label2">Address 3 :</label>
                                        @Html.TextBoxFor(model => model.Address3, new { @class = "form-control" })*@
                            @* <div class="row-error ErrorMessage">
                                    @Html.ValidationMessageFor(model => model.Address3)
                                </div>*@
                            @*  </div>
                                        <div class="col-xs-6">
                                        </div>
                                    </div>
                                </div>*@

                            <div class="row">
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblCountry" class="filter-col control-label label1">Country :</label>

                                        @* @Html.DropDownList("", ViewBag.CountryList as SelectList, ,new { @id = "Country" })*@
                                        @*@Html.DropDownListFor(model => model.country, new SelectList(Model.country, "Value", "Text"), new { @id = "Country" })*@
                                        @*         @Html.DropDownListFor(model => model.CountryId, new SelectList(Model.CountryItem, "Value", "Text"), new { @id = "Country",@class = "form-control dropdown" })*@
                                        @Html.DropDownListFor(model => model.CountryId, ViewBag.Country as SelectList, "Select Country ", new { @id = "Country", @class = "form-control dropdown" })

                                        @*@Html.DropDownListFor(model => model.country,  ViewBag.CountryList as SelectList,"Select Country", new { @id = "Country" })*@

                                        <div class="row-error ErrorMessage">
                                            @Html.ValidationMessageFor(model => model.CountryId)
                                        </div>
                                        @*<span style="color: Red">*</span>*@

                                    </div>
                                </div>
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblState" class="filter-col control-label label1">Province :</label>
                                        <select id="selState" name="selState" style="color: black" class="form-control dropdown"></select>
                                        @*         @Html.DropDownList("selState", ,@Html.DisplayFor(modelItem => modelItem.StateId))*@
                                        <div class="row-error ErrorMessage">
                                            @Html.ValidationMessageFor(model => model.StateId)
                                        </div>
                                        @*<span style="color: Red">*</span>*@
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblCity" class="filter-col control-label label1">City :</label>
                                        @Html.TextBoxFor(model => model.City, new { @class = "form-control", onkeypress = "return AllowAlphabet(event)", onblur = "checkLength(this)", maxlength = "20" })
                                        <div class="row-error ErrorMessage">
                                            @Html.ValidationMessageFor(model => model.City)
                                        </div>
                                        @*<span style="color: Red">*</span>*@
                                    </div>
                                </div>
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblPincode" class="filter-col control-label label1">Pincode :</label>
                                        @Html.TextBoxFor(model => model.Pincode, new { @class = "form-control", @onkeypress = "return isNumber(event)", onblur = "checkLengthForPincode(this)", maxlength = "6" })
                                        <div class="row-error ErrorMessage">
                                            @Html.ValidationMessageFor(model => model.Pincode)
                                        </div>
                                        @*<span style="color: Red">*</span>*@
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblPFN" class="filter-col control-label label1">Person's Full Name :</label>
                                        @Html.TextBoxFor(model => model.PersonFullName, new { @class = "form-control", onkeypress = "return AllowAlphabet(event)" })
                                        <div class="row-error ErrorMessage">
                                            @Html.ValidationMessageFor(model => model.PersonFullName)
                                        </div>
                                        @*<span style="color: Red">*</span>*@
                                    </div>
                                </div>
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblUN" class="filter-col control-label label1">User Name :</label>
                                        @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @id = "UserName", onkeypress = "return isAlphaNumeric(event)", onblur = "checkLength(this)", maxlength = "20" })
                                        <div class="row-error ErrorMessage">
                                            @Html.ValidationMessageFor(model => model.UserName)
                                        </div>
                                        @*<span style="color: Red">*</span>*@
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblP" class="filter-col control-label label1">Password :</label>
                                        @Html.PasswordFor(model => model.Password, new { @class = "form-control", @id = "Password", onblur = "checkLength(this)", maxlength = "20" })
                                        <div class="row-error ErrorMessage">
                                            @Html.ValidationMessageFor(model => model.Password)
                                        </div>
                                        @*<span style="color: Red">*</span>*@
                                    </div>
                                </div>
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblRP" class="filter-col control-label label1">Re-enter Password :</label>
                                        <input id="txtReenterPassword" class="form-control input-sm" type="password" />
                                    </div>
                                    @*<span style="color: Red">*</span>*@
                                </div>
                            </div>

                        </div>

                        <div id="tabs-2">

                            <div class="row">
                                <div class="col-xs-12">
                                    <label id="lblPhoneNo" class="filter-col control-label label1">Contact No :</label>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-1">
                                    <div class="form-group">
                                        @Html.TextBoxFor(model => model.Code, new { @class = "form-control", onkeypress = "return isNumber(event)", onblur = "checkLengthForCode(this)", maxlength = "3", @readonly = "true" })
                                        <div class="row-error ErrorMessage">
                                            @Html.ValidationMessageFor(model => model.Code)
                                        </div>
                                        @*<span style="color: Red">*</span>*@
                                    </div>
                                </div>
                                <div class="col-xs-5">
                                    <div class="form-group">
                                        @Html.TextBoxFor(model => model.ContactNo, new { @class = "form-control", @onkeypress = "return isNumber(event)", onblur = "checkLengthForContact(this)", maxlength = "10" })
                                        <div class="row-error ErrorMessage">
                                            @Html.ValidationMessageFor(model => model.ContactNo)
                                        </div>
                                        @*<span style="color: Red">*</span>*@
                                    </div>
                                </div>
                                <div class="col-xs-1">
                                </div>
                                <div class="col-xs-6">
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-12">
                                    <label id="lblEmail" class="filter-col control-label label1">Email ID :</label>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-6">
                                    @Html.TextBoxFor(model => model.FinancialInstituteEmailId1, new { @class = "form-control", onblur = "validateEmail(this)" })
                                    <div class="row-error ErrorMessage">
                                        @Html.ValidationMessageFor(model => model.FinancialInstituteEmailId1)
                                    </div>
                                    @*<span style="color: Red">*</span>*@
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-12">
                                    <label id="lblCPD" class="filter-col control-label ">Contact Person Details :</label>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblCP1" class="filter-col control-label label1">Person 1 Name :</label>
                                        @Html.TextBoxFor(model => model.ContactPerson1, new { @class = "form-control", onkeypress = "return AllowAlphabet(event)" })
                                        <div class="row-error ErrorMessage">
                                            @Html.ValidationMessageFor(model => model.ContactPerson1)
                                        </div>
                                        @*<span style="color: Red">*</span>*@
                                    </div>
                                </div>
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblCP2" class="filter-col control-label label2">Person 2 Name :</label>
                                        @Html.TextBoxFor(model => model.ContactPerson2, new { @class = "form-control", onkeypress = "return AllowAlphabet(event)" })
                                        <div class="row-error">
                                            @Html.ValidationMessageFor(model => model.ContactPerson2)
                                        </div>
                                        @*<span style="color: Red">*</span>*@
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblP1C" class="filter-col control-label label1">Person 1 Contact :</label>
                                        @Html.TextBoxFor(model => model.ContactPerson1Mobile, new { @class = "form-control", @onkeypress = "return isNumber(event)", onblur = "checkLengthForContact(this)", maxlength = "10" })
                                        <div class="row-error ErrorMessage">
                                            @Html.ValidationMessageFor(model => model.ContactPerson1Mobile)
                                        </div>
                                        @*<span style="color: Red">*</span>*@
                                    </div>
                                </div>
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblP2C" class="filter-col control-label label2">Person 2 Contact :</label>
                                        @Html.TextBoxFor(model => model.ContactPerson2Mobile, new { @class = "form-control", @onkeypress = "return isNumber(event)", onblur = "checkLengthForContact(this)", maxlength = "10" })
                                        <div class="row-error">
                                            @Html.ValidationMessageFor(model => model.ContactPerson2Mobile)
                                        </div>
                                        @*<span style="color: Red">*</span>*@
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblP1E" class="filter-col control-label label1">Person 1 Email :</label>
                                        @Html.TextBoxFor(model => model.ContactPerson1EmailId, new { @class = "form-control" })
                                        <div class="row-error ErrorMessage">
                                            @Html.ValidationMessageFor(model => model.ContactPerson1EmailId)
                                        </div>
                                        @*<span style="color: Red">*</span>*@
                                    </div>
                                </div>
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblP2E" class="filter-col control-label label2">Person 2 Email :</label>
                                        @Html.TextBoxFor(model => model.ContactPerson2EmailId, new { @class = "form-control" })
                                        <div class="row-error">
                                            @Html.ValidationMessageFor(model => model.ContactPerson2EmailId)
                                        </div>
                                        @*<span style="color: Red">*</span>*@
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-5">
                                </div>
                                <div class="col-xs-7">
                                    <input id="btnRegister" type="submit" value="Register" formmethod="post" />
                                </div>
                            </div>                      

                        </div>
                      
                            <div class="row">
                                <div class="col-xs-5">
                                </div>
                                <div class="col-xs-7">
                                    <input type="button" id="btnPrevious" value="Previous" style="display: none" />
                                    <input type="button" id="btnNext" value="Next" />
                                </div>
                            </div>
                
                    </div>
                 
                    
                </div>
                </div>
            </div>
          }
</form>
<script type="text/javascript">
    $(document).ready(function () {
        $(function () {
            $('[id=ddlCreditType]').multiselect({
                includeSelectAllOption: true
            });
        });
    });

</script>
<script type="text/javascript">
    $(document).ready(function () {
        var currentTab = 0;
        $(function () {
            $("#tabs").tabs({
                select: function (e, i) {
                    currentTab = i.index;
                }
            });
        });
        $("#btnNext").click("click", function () {
            debugger;
            var tabs = $('#tabs').tabs();
            var c = $('#tabs').tabs("length");
            currentTab = currentTab == (c - 1) ? currentTab : (currentTab + 1);
            //tabs.tabs('select', currentTab);
            $("#btnPrevious").show();
            if (currentTab == (c - 1)) {
                $("#btnNext").hide();
            } else {
                $("#btnNext").show();
            }
            tabs.tabs('select', currentTab);
        });
        $("#btnPrevious").click("click", function () {
            var tabs = $('#tabs').tabs();
            var c = $('#tabs').tabs("length");
            currentTab = currentTab == 0 ? currentTab : (currentTab - 1);
            //tabs.tabs('select', currentTab);
            if (currentTab == 0) {
                $("#btnNext").show();
                $("#btnPrevious").hide();
            }
            if (currentTab < (c - 1)) {
                $("#btnNext").show();
            }
            tabs.tabs('select', currentTab);
        });
    });
</script>
<script type="text/javascript">
    //$(document).ready(function () {
    //    $("form :input:enabled:visible:first").focus();
    //    $("form :input:enabled:visible:first").select();
    //    $(".input-validation-error").first().focus();
    //    $(".input-validation-error").first().select();
    //});

    $(document).ready(function () {
        $("#Country").change(function () {
            debugger;
            var countryid = $("#Country").val();
            //alert(countryid);
            var url = '@Url.Action("StateList", "FinancialInstitute")';
            //alert(url);
            $.post(url, { CountryId: countryid }, function (data) {
                //alert(countryid);
                debugger;
                //alert(data);
                //$("#selState").html('');
                //$("#selState").append($("<option></option>").val(0).html('Select'));
                $("#selState").empty().append($("<option></option>").val(-1).html('Select'));

                $.each(data, function (Key, item) {
                    //alert(data.d);
                    //alert(Key);
                    //alert(item.Id);
                    //alert(item.State);

                    debugger;
                    $("#selState").append($("<option></option>").val(item.Value).html(item.Text));
                });
            });
        });
    });
    $(function () {
        $('#Name').change(function () {
            debugger;
            var Name = $('#Name').val();
            //
            $.ajax({
                url: '/FinancialInstitute/doesNameExist/',
                type: 'POST',
                data: { Name: Name },
                //success: function (result) { alert(' That user name has already been taken'); }
                success: function (result) {
                    var a = JSON.stringify(result);
                    //debugger;
                    if (a == "false") {

                        alert(' That name has already exits');
                        $('#Name').val('');
                    }
                    else {
                    }
                }

            });
        });
    });
    $(function () {
        $('#RegistrationNo').change(function () {
            var RegistrationNo = $('#RegistrationNo').val();
            //
            $.ajax({

                url: '/FinancialInstitute/doesRegistrationNoExist/',
                type: 'POST',
                data: { RegistrationNo: RegistrationNo },
                //success: function (result) { alert(' That user name has already been taken'); }
                success: function (result) {
                    var a = JSON.stringify(result);
                    //debugger;
                    if (a == "false") {
                        alert(' That RegistrationNo has already exits');
                        $('#RegistrationNo').val('');
                    }
                    else {
                    }
                }

            });
        });
    });
    $(function () {
        $('#UserName').change(function () {
            var UserName = $('#UserName').val();
            //
            $.ajax({
                url: '/FinancialInstitute/doesUserNameExist/',
                type: 'POST',
                data: { UserName: UserName },
                //success: function (result) { alert(' That user name has already been taken'); }
                success: function (result) {
                    var a = JSON.stringify(result);
                    //debugger;
                    if (a == "false") {
                        alert(' That user name has already exits');
                        $('#UserName').val('');
                    }
                    else {
                    }
                }

            });
        });
    });
    $(function () {
        $('#BankCode').change(function () {
            var BankCode = $('#BankCode').val();
            //
            $.ajax({

                url: '/FinancialInstitute/doesBankCodeExist/',
                type: 'POST',
                data: { BankCode: BankCode },
                //success: function (result) { alert(' That user name has already been taken'); }
                success: function (result) {
                    var a = JSON.stringify(result);
                    //debugger;
                    if (a == "false") {
                        alert(' That Bank Code has already exits');
                        $('#BankCode').val('');
                    }
                    else {
                    }
                }

            });
        });
    });
    $(function () {
        $('#BranchCode').change(function () {
            var BranchCode = $('#BranchCode').val();
            //
            $.ajax({

                url: '/FinancialInstitute/doesBranchCodeExist/',
                type: 'POST',
                data: { BranchCode: BranchCode },
                //success: function (result) { alert(' That user name has already been taken'); }
                success: function (result) {
                    var a = JSON.stringify(result);
                    //debugger;
                    if (a == "false") {
                        alert(' That Branch Code has already exits');
                        $('#BranchCode').val('');
                    }
                    else {
                    }
                }

            });
        });
    });
    $(function () {
        $('#SwiftCode').change(function () {
            var SwiftCode = $('#SwiftCode').val();
            //
            $.ajax({

                url: '/FinancialInstitute/doesSwiftCodeExist/',
                type: 'POST',
                data: { SwiftCode: SwiftCode },
                //success: function (result) { alert(' That user name has already been taken'); }
                success: function (result) {
                    var a = JSON.stringify(result);
                    //debugger;
                    if (a == "false") {
                        alert(' That Swift Code has already exits');
                        $('#SwiftCode').val('');
                    }
                    else {
                    }
                }

            });
        });
    });
    $(function () {
        $("#txtReenterPassword").change(function () {
            if ($("#Password").val() != $("#txtReenterPassword").val()) {
                alert('Password does not Match');
                $("#txtReenterPassword").addClass("input-validation-error");
                return false;
            }
        });
    });
    //function isNumber(evt) {
    //    debugger;
    //    evt = (evt) ? evt : window.event;
    //    var charCode = (evt.which) ? evt.which : evt.keyCode;
    //    if (charCode > 31 && (charCode < 48 || charCode > 57)) {
    //        alert('Please Enter Numbers Only');
    //        return false;

    //    }
    //    return true;
    //}
</script>
<script type="text/javascript">
    $(function () {
        $('#Country').change(function () {
            var countryid = $("#Country").val();
            debugger;
            $.ajax({
                url: '/FinancialInstitute/CountryCode/',
                type: 'POST',
                data: { countryid: countryid },
                success: function (data) {

                    debugger;
                    if (data != null) {
                        var vdata = data;
                        $("#Code").val(vdata);

                    }
                }

            });
        });
    });
</script>
