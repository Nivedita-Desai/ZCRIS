@model CreditRatingModel.Model.CollegeMaster_Metadata 
@using CreditRatingModel.Model

@{
    ViewBag.Title = "AddCollege";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}

@using (Html.BeginForm("AddCollege", "CollegeMaster", FormMethod.Post, new {id="frmAddCollege" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <br />
    <link href="@Url.Content("~/CSS/bootstrap-3.3.2.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/CSS/bootstrap-multiselect.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/CSS/prettify.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Scripts/jquery-2.1.4.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/js/bootstrap.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/js/bootstrap-3.3.2.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/js/prettify.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/js/bootstrap-multiselect.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/js/myjquery.js")" type="text/javascript"></script>
    
    <div class="container">
        <div class="panel panel-primary">
            <div class="panel-heading"><label id="lblHeading" class="filter-col control-label labelHead">College Master</label></div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-xs-6">
                        <div class="form-group">
                            <label id="lblColName" class="filter-col control-label label1">College Name :</label>
                            @Html.TextBoxFor(model => model.CollegeName, new {  @class = "form-control input-sm", @onkeypress = "return AllowAlphabet(event)" })
                        </div>
                    </div>
                   @* <div class="col-xs-6">
                        <div class="form-group">
                            <label id="lblCourse" class="filter-col control-label label1">Select Course:</label>
                           
                            @Html.DropDownListFor(model => model.CourseListId, ViewBag.Course as SelectList, new { @id = "selCourse", @class = "form-control dropdown ", @multiple = "multiple" })
                            <select id="selCourse" name="selCourse" style="color: black" class="form-control dropdown" multiple="multiple"></select>
                        </div>
                    </div>*@
                </div>
                 <div id="Address" class="row">
                                    <div class="col-xs-6">
                                        <div class="form-group">


                                            <label class="filter-col control-label label1">Address </label>
                                            @Html.TextBoxFor(model => model.Address1, new {@maxlength="100", @class = "form-control" })
                                          
                                            @Html.TextBoxFor(model => model.Address2, new {@maxlength="100", @class = "form-control"})
                                         
                                            @Html.TextBoxFor(model => model.Address3, new {@maxlength="100", @class = "form-control"})


                                        </div>
                                    </div>

                                </div>

               @* <div class="row">
                    <div class="col-xs-6">
                        <div class="form-group">
                            <label id="lblColAddress" class="filter-col control-label label1">Address :</label>
                            @Html.TextAreaFor(model => model.ColAddress, new {@maxlength="100",  @id = "txtColAddress", @class = "form-control input-sm" })
                        </div>
                    </div>
                </div>*@

                <div class="row">
                    <div class="col-xs-6">
                        <div class="form-group">
                            <label id="lblColCountryId" class="filter-col control-label label1">Country :</label>
                            @Html.DropDownListFor(model => model.CountryId, ViewBag.Country as SelectList, "Select Country", new {  @class = "form-control dropdown" })
                        </div>
                    </div>
                    <div class="col-xs-6">
                        <div class="form-group">
                            <label id="lblState" class="filter-col control-label label1">Province :</label>
                            <select id="selState" name="selState" style="color: black" class="form-control dropdown"></select>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-6">
                        <div class="form-group">
                            <label id="lblCity" class="filter-col control-label label1">City :</label>
                            @*@Html.TextBoxFor(model => model.city, new { @maxlength="20", @id = "txtCity", @class = "form-control input-sm", @onkeypress = "return AllowAlphabet(event)" })
     *@                       <select id="selCity" name="selCity" style="color: black" class="form-control dropdown"></select>
                



                        </div>
                    </div>
                    <div class="col-xs-6">
                        <div class="form-group">
                            <label id="lblPincode" class="filter-col control-label label1">Pincode :</label>
                            @Html.TextBoxFor(model => model.pincode, new {@maxlength = "6" ,  @class = "form-control input-sm", @onkeypress = "return isNumber(event)", @onblur = "checkLengthForPincode(this)" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-6">
                        <label id="lblPhoneNo" class="filter-col control-label label1">Telephone No :</label>
                    </div>
                    <div class="col-xs-6">

                        <label id="lblEmailId" class="filter-col control-label label1">College Email Id :</label>
                    </div>
                </div>


                <div class="row">
                    <div class="col-xs-1">
                        <div class="form-group">
                            @Html.TextBoxFor(model => model.code, new { @maxlength="4",@id = "txtContryCode", @class = "form-control input-sm" , @readonly = "true" })
                              @Html.HiddenFor(model=>model.code)
                              </div>
                    </div>
                    <div class="col-xs-5">
                        <div class="form-group">
                            @Html.TextBoxFor(model => model.ContactNo, new {  @maxlength="10",@class = "form-control input-sm", @onkeypress = "return isNumber(event)", @onblur = "checkLengthForContact(this)" })
                        </div>
                    </div>
                    <div class="col-xs-6">
                        <div class="form-group">
                            @Html.TextBoxFor(model => model.CEmailId, new { @maxlength="50", @class = "form-control ",@onblur = "return validateEmail(this) "})
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-6">
                        <div class="form-group">
                            <label id="lblwebsite" class="filter-col control-label label2">College Website :</label>
                            @Html.TextBoxFor(model => model.website, new { @id = "txtWebsite", @class = "form-control input-sm" })
                        </div>
                    </div>
                </div>

                <br />
                <fieldset class="scheduler-border">

                    <legend class="scheduler-border">
                        <label id="lblContPersonDetails" class="filter-col control-label label2">Contact Person Details :</label>
                    </legend>

                    <div class="row">
                        <div class="col-xs-6">
                            <label id="lblPersonName" class="filter-col control-label label1">Person Name :</label>
                        </div>
                        <div class="col-xs-6">
                            <label id="lblPersonContact" class="filter-col control-label label1">Person Contact No :</label>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xs-6">
                            <div class="form-group">
                                @*<label id="lblPersonName" class="filter-col control-label label1">Person Name :</label>*@
                                @Html.TextBoxFor(model => model.ContactPersonName, new { @class = "form-control input-sm", @onkeypress = "return AllowAlphabet(event)" })
                            </div>
                        </div>
                        <div class="col-xs-1">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.code, new { @maxlength = "4", @id = "txtPersonContryCode", @class = "form-control input-sm", @readonly = "true"  })
                            @Html.HiddenFor(model=>model.code)
                                 </div>
                        </div>
                        <div class="col-xs-5">
                            <div class="form-group">
                                @*<label id="lblPersonContact" class="filter-col control-label label1">Contact No :</label>*@
                                @Html.TextBoxFor(model => model.ContactPersonMobile, new { @maxlength="10", @class = "form-control input-sm", @onkeypress = "return isNumber(event)" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xs-6">
                            <div class="form-group">
                                <label id="lblPerson1Name" class="filter-col control-label label1">Person Email Id :</label>
                                @Html.TextBoxFor(model => model.ContactPersonEmail, new {  @class = "form-control input-sm" ,@maxlength = "50",@onblur = "return validateEmail(this) " })
                            </div>
                        </div>
                 
                        <div class="col-xs-6">
                            <div class="form-group">
                                <label id="lblPersonDesign" class="filter-col control-label label1">Person Designation :</label>
                                @Html.DropDownListFor(model => model.ConPersonDesignation,ViewBag.Designation as SelectList,"Select Designation", new { @id = "txtPersonDesn", @class = "form-control input-sm" })
                            </div>
                        </div>
                    </div>
                </fieldset> 

                <div class="row">
                    <div class="col-xs-2">
                    </div>
                    <div class="col-xs-4">
                        <div class="form-group">
                            
                        
                                     <h4 style="text-align: center">
                                         <button id="btnAdd" type="submit" name="Save">Save</button>                                         
                                     </h4>
                                  
                          
@*                            <button id="btnAdd" type="submit" name="ADD" formmethod="post">SAVE</button>*@
                        </div>
                    </div>
                    
                    <div class="col-xs-5">
                           <button id="btnClear" type="reset" name="RESET">RESET</button>   
@*                        <button id="btnClear" type="reset" name="RESET">RESET</button>*@
                    </div>
                </div>
            </div>
        </div>
    </div>
    
}
<script type="text/javascript">

    $(document).ready(function () {
        debugger;
        $('#selCourse').multiselect({

            includeSelectAllOption: true
        });
    });
   

    $(function () {
        debugger;
        $('#btnAdd').click(function () {
            var frmvalidator = new Validator("frmAddCollege");
            frmvalidator.EnableMsgsTogether();

            frmvalidator.addValidation("CollegeName", "req", "Please enter college name");

            frmvalidator.addValidation("Address1", "req", "Please enter address");
            frmvalidator.addValidation("CountryId", "req", "Please select country");
            frmvalidator.addValidation("selState", "req", "Please select state");
            frmvalidator.addValidation("pincode", "req", "Please enter pincode");
            frmvalidator.addValidation("ContactNo", "req", "Please enter college contact number");
            frmvalidator.addValidation("selCity", "req", "Please enter city");
            frmvalidator.addValidation("CEmailId", "req", "Please enter college email id ");
           // frmvalidator.addValidation("CEmailId", "email", "Please enter valid college email id ");
            frmvalidator.addValidation("ContactPersonName", "req", "Please enter person name");
            frmvalidator.addValidation("ContactPersonMobile", "req", "Please enter person contact no");
            //frmvalidator.addValidation("ContactPersonEmail", "email", "Please enter valid person email id");
            frmvalidator.addValidation("ContactPersonEmail", "req", "Please enter person email id");


        });
    });
     
       
    
      
  

    $("#CountryId").change(function () {
        var countryid = $("#CountryId").val();
    
            var url = '@Url.Action("StateList", "CollegeMaster")';

        $.post(url, { CountryId: countryid }, function (data) {

            $("#selState").empty().append($("<option></option>").val(-1).html('Select'));
            $("#selCity").empty().append($("<option></option>").val(-1).html('Select'));
            $.each(data, function (Key, item) {

                $("#selState").append($("<option></option>").val(item.Value).html(item.Text));
                
            });
        });

    @*    var url1 = '@Url.Action("AssignCountryCode", "CollegeMaster")';

        $.post(url1, { CountryId: countryid }, function (data) {
            debugger;
            if (data != null) {

                $("#txtContryCode").val(data);
                $("#txtPersonContryCode").val(data);

            }
        });*@

    });
    $("#selState").change(function () {
        var selState = $("#selState").val();
        //var countryid = $("#selCity").val();
        var url = '@Url.Action("CityList", "CollegeMaster")';

        $.post(url, { selState: selState}, function (data) {

            $("#selCity").empty().append($("<option></option>").val(-1).html('Select'));

            $.each(data, function (Key, item) {

                $("#selCity").append($("<option></option>").val(item.Value).html(item.Text));
            });
        });
    });
    $("#selCity").change(function () {
        var selCity = $("#selCity").val();
        var url1 = '@Url.Action("AssignCountryCode", "CollegeMaster")';

        $.post(url1, { selCity: selCity }, function (data) {
            debugger;
            if (data != null) {

                $("#txtContryCode").val(data);
                $("#txtPersonContryCode").val(data);

            }
        });
    });
    $('#CollegeName').change(function () {
        var CollegeName = $('#CollegeName').val();
        debugger;
     
    
            var url = '@Url.Action("Clgexist", "CollegeMaster")';

            $.post(url, { CollegeName: CollegeName },
                function (data) {
                    debugger;
                    if (data != null) {


                        alert("This College is already exist")
                        $('#CollegeName').val("");

                    }


                });
         
  });
</script>

 
