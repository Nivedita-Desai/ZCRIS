@model CreditRatingModel.Model.BorrowerDetails

@{
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
    
 
}
<html>

<head>
    <title></title>
    <script src="@Url.Content("~/js/jquery.min.js")"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            $('#IssueDate').attr("disabled", "disabled")
            $('#EPD').attr("disabled", "disabled")
        });
        var currentTab = 0;
        $(function () {
            debugger;
            $("#tabs").tabs({
                disabled: [0, 1, 2],
                select: function (e, i) {
                    currentTab = i.index;
                    return currentTab;
                }
            });
        });


        @*$("#ddlCountry").change(function () {
        debugger;
            var countryid = $("#ddlCountry").val();

        var url = '@Url.Action("StateList", "Borrower")';

        $.post(url, { CountryId: countryid }, function (data) {

            //debugger;
            $("#selState").empty().append($("<option></option>").val(-1).html('Select'));

            $.each(data, function (Key, item) {
                //debugger;
                $("#selState").append($("<option></option>").val(item.Value).html(item.Text));
            });
        });
    });*@

        $("#btnNext").live("click", function () {
            debugger;
            var selectedTab = currentTab;
            var b = selectedTab + 1;

            var tabs = $('#tabs').tabs();
            var c = $('#tabs').tabs("length");
            currentTab = currentTab == (c - 1) ? currentTab : (currentTab + 1);
            if (currentTab == (c - 1)) {
                $("#btnNext").hide();
                $("#btnPrevious").show();

                var firstname = $('#FirstName').val();
                var middlename = $('#MiddleName').val();
                var last = $('#LastName').val();
                $('#FULLANME').val(firstname + " " + middlename + " " + last);
                var CompanyName = $('#CompanyName').val();
                var CompanyType = $('#CompanyType').val();
                $('#Cname').val(CompanyName + " " + CompanyType);
                var Pan = $('#PAN').val();
                $('#PANinv').val(Pan);

                tabs.tabs('enable', b);
                tabs.tabs('option', 'active', b);
                tabs.tabs('option', 'selected', b);

                var c = tabs.find("ul li").size();
                for (var i = 0; i < c; i++) {
                    tabs.tabs('disable', i);
                }


                //tabs.tabs('select', currentTab);
            } else {

                $("#btnNext").show();
                $("#btnPrevious").show();
                //tabs.tabs('select', currentTab);

                var firstname = $('#FirstName').val();
                var middlename = $('#MiddleName').val();
                var last = $('#LastName').val();
                $('#FULLANME').val(firstname + " " + middlename + " " + last);
                var CompanyName = $('#CompanyName').val();
                var CompanyType = $('#CompanyType').val();
                $('#Cname').val(CompanyName + " " + CompanyType);
                var Pan = $('#PAN').val();
                $('#PANinv').val(Pan);

                tabs.tabs('enable', b);
                tabs.tabs('option', 'active', b);
                tabs.tabs('option', 'selected', b);

                var c = tabs.find("ul li").size();
                for (var i = 0; i < c; i++) {
                    tabs.tabs('disable', i);
                }
            }
        });

        $("#btnPrevious").live("click", function () {
            debugger;
            var selectedTab = currentTab;
            var b = selectedTab - 1;
            var tabs = $('#tabs').tabs();
            var c = $('#tabs').tabs("length");
            currentTab = currentTab == 0 ? currentTab : (currentTab - 1);


            if (currentTab < (c - 1)) {
                $("#btnNext").show();
                $("#btnPrevious").show();

                var firstname = $('#FirstName').val();
                var middlename = $('#MiddleName').val();
                var last = $('#LastName').val();
                $('#FULLANME').val(firstname + " " + middlename + " " + last);
                var CompanyName = $('#CompanyName').val();
                var CompanyType = $('#CompanyType').val();
                $('#Cname').val(CompanyName + " " + CompanyType);
                var Pan = $('#PAN').val();
                $('#PANinv').val(Pan);

                tabs.tabs('enable', b);
                tabs.tabs('option', 'active', b);
                tabs.tabs('option', 'selected', b);

                var c = tabs.find("ul li").size();
                for (var i = 0; i < c; i++) {
                    tabs.tabs('disable', i);
                }
                //tabs.tabs('select', currentTab);
            }

            if (currentTab == 0) {
                $("#btnNext").show();
                $("#btnPrevious").hide();

                var firstname = $('#FirstName').val();
                var middlename = $('#MiddleName').val();
                var last = $('#LastName').val();
                $('#FULLANME').val(firstname + " " + middlename + " " + last);
                var CompanyName = $('#CompanyName').val();
                var CompanyType = $('#CompanyType').val();
                $('#Cname').val(CompanyName + " " + CompanyType);
                var Pan = $('#PAN').val();
                $('#PANinv').val(Pan);

                tabs.tabs('enable', b);
                tabs.tabs('option', 'active', b);
                tabs.tabs('option', 'selected', b);

                var c = tabs.find("ul li").size();
                for (var i = 0; i < c; i++) {
                    tabs.tabs('disable', i);
                }
                //tabs.tabs('select', currentTab);

            }

        });

    </script>


    @*      function tabs() {
            var currentTab = 0;
            var activate = false,
         tabLinks = $('.nav-tabs a');
            tabContent = $('.tab-pane');

            tabLinks.eq(0).addClass('active');
            tabContent.eq(0).addClass('active');

            tabLinks.click(function (e) {
                e.preventDefault();
                debugger;
                if (activate === true) { // Only do something if button has been clicked
                    //debugger;
                    var target = this.hash,
                        el = $(this);

                    if (target === "#tabs-1") {
                        tabContent.eq(0).addClass('active');
                        tabContent.eq(1).removeClass('active');
                        tabContent.eq(2).removeClass('active');
                    }
                    else
                        if (target === "#tabs-2") {
                            tabContent.eq(1).addClass('active');
                            tabContent.eq(0).removeClass('active');
                            tabContent.eq(2).removeClass('active');
                        }
                        else {
                            tabContent.eq(0).removeClass('active');
                            tabContent.eq(1).removeClass('active');

                            tabContent.eq(2).addClass('active');


                        }
                    el.addClass('active');
                    tabContent.hide(); // Hide all
                    $(target).show(); // Show selected
                }
            });
           var strTabTwo = '@(ViewBag.TabYN)';
        var strTabThree = '@(ViewBag.TabYN1)';
            debugger;
            if (strTabTwo == 'N' && strTabThree == 'Y') {
                currentTab = 0;
            }
            else
                if (strTabTwo == 'Y') //'Y' means 2nd tab
                {
                    currentTab = 1;
                    tabContent.eq(0).removeClass('active');
                    tabContent.eq(2).removeClass('active');
                    tabContent.eq(1).addClass('active');

                }
                else
                    if (strTabThree == 'N') //'Y' means 3nd tab
                    {

                        currentTab = 2;

                        tabContent.eq(0).removeClass('active');
                        tabContent.eq(1).removeClass('active');

                        tabContent.eq(2).addClass('active');
                        $('#docid').val("");
                        debugger;


                    }
                    else {
                        currentTab = 0;
                    }


            $("#btnNext").click(function () {
                debugger;
                activate = true;
                tabContent.eq(0).removeClass('active');
                tabContent.eq(1).removeClass('active');

                tabLinks.eq(2).addClass('active');

                tabContent.eq(2).addClass('active');
            });

            $("#btnAdd").click( function () {
                debugger;
                activate = true;
                tabContent.eq(0).removeClass('active');
                tabLinks.eq(1).addClass('active');
                tabContent.eq(1).addClass('active');

            });

            $("#btnUpload").click(function () {

                activate = true;
                tabContent.eq(0).removeClass('active');
                tabContent.eq(1).removeClass('active');

                tabLinks.eq(2).addClass('active');


                tabContent.eq(2).addClass('active');


            });

        }*@



    <script type="text/javascript">

        $(document).ready(function () {
            $('#btnBOD').hide();

            $('#tabs').hide();
            debugger;
            var a = '@(ViewBag.SUCEESS)';
            debugger;

            if (a == "I")
            {
                $('#DOC').removeAttr("disabled", true);
                clearfields();

            }
            debugger;

            if (a == "S") {
                debugger;
                $("#tabs").show();
                $('#NAME').hide();
                $('#FN').hide();
                $('#GD').hide();
                $('#Title').hide();
                $('#Nationality').hide();
                $('#btnUpload').hide();
                $('#btnBOD').show();
                FormEnable();


                var Company = '@(ViewBag.Company)';
                var CId = "C";
                $('#lbltype').val(CId);

                $('#selState').hide();
                var wrapper = $(".input-field-wrap");
                $(wrapper).append('@(Html.TextBoxFor(model => model.State, new {@id = "StateId",@class = "form-control dropdown",@readonly="true" }))')
                $('#selComtype').hide();
                var wrapper = $(".input-field-wrap1");
                $(wrapper).append('@(Html.TextBoxFor(model => model.Addtype, new {@id = "seltype",@class = "form-control dropdown",@readonly="true" }))')


                @*var State = '@(ViewBag.State)';
                var stateId = '@(ViewBag.stateId)';
                var S = stateId;
                var S1 = "stateId";
                //$('#selState').hide();
                //$("#selState1").append($("<option></option>").val(stateId).html(State));
                $('#selState1').val();
                $('#selState').val(S);*@

                var path = '@(ViewBag.path)';
                $('#fileUpload').show();
                $('#fileUpload').val(path);

                var value = $('#Designation').val();
                if (value == 'PP') {
                    $('#btnBOD').val("Add Propritor");
                }
                else if (value == 'P') {
                    $('#btnBOD').val("Add Partner");
                }
                else {
                    $('#btnBOD').val("Add Management");
                }
                if (a != null) {
                    debugger;
                    var index = $('#tabs li a').index($('a[href="#tabs-3"]').get(0));
                    $('#tabs').tabs({ selected: index });
                }

            }

            debugger;
            $('#lbltype').change(function () {
                debugger;

                debugger;
                var borrowerType = $('#lbltype').val();
                if (borrowerType == "C") {

                    $('#tabs').show();
                    $('#mob').hide();
                    debugger;
                    $('#NAME').hide();
                    $('#FN').hide();
                    $('#GD').hide();
                    $('#Title').hide();
                    $('#Nationality').hide();
                    $('#fileUpload').hide();
                    $('#BOD').show();
                    $('#ComNAME').show();
                    $('#selState1').hide();
                    $('#cn').show();
                    $('#ic').show();
                    $('#bn').show();
                    $('#btnBOD').hide();
                    /////////////////////////

                    debugger;
//                    $("#btnNext").click(function () {
//                var borrowerType = $('#lbltype').val();
//                if (borrowerType == "C") {

//                        if (ReqStgBorrowerVali() == false) {
//                            debugger;
//                            return false;
//                        }
//}

//                    });



                }
                else {
                    $('#tabs').show();
                    $('#mob').show();
                    $('#btnBOD').hide();
                    $('#NAME').show();
                    $('#FN').show();
                    $('#GD').show();
                    $('#Title').show();
                    $('#Nationality').show();
                    $('#fileUpload').hide();
                    $('#BOD').hide();
                    $('#selState1').hide();
                    $('#ComNAME').hide();

                    $('#cn').hide();
                    $('#ic').hide();

                    $('#bn').hide();



  //                  $("#btnNext").click(function () {
  //                      debugger;
  //var borrowerType = $('#lbltype').val();
  //              if (borrowerType == "I") {

  //                      if (ReqStgBorrowerVali1() == false) {
  //                          return false;
  //                      }}
  //                  });
                }
            });
        });




    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            debugger;
            $('#btnUpload').click(function () {
                var frmvalidator = new Validator("borrower");
                frmvalidator.EnableMsgsTogether();
                frmvalidator.clearAllValidations();

                frmvalidator.addValidation("Address1", "req", "Please Enter Address");
                frmvalidator.addValidation("CountryId", "req", "Please Select Country");
                frmvalidator.addValidation("selState", "req", "Please Select State");
                frmvalidator.addValidation("Pincode", "req", "Please Enter Pin Number");
                frmvalidator.addValidation("City", "req", "Please Enter city");
                frmvalidator.addValidation("EmailId1", "req", "Please Enter Email Id ");
                frmvalidator.addValidation("docid", "req", "Please Enter Document Number");
                frmvalidator.addValidation("selComtype", "req", "Please Select Address Type");
                frmvalidator.addValidation("fileToUpload", "req", "Please Select  File to Upload");

                debugger;
                var borrowerTypeId = $('#lbltype').val();
                debugger;
                if (borrowerTypeId == "C") {
                    frmvalidator.addValidation("CompanyName", "req", "Please Enter Company name");
                    frmvalidator.addValidation("CompanyType", "req", "Please Enter Company type");
                    frmvalidator.addValidation("IncorporationDate", "req", "Please Select Incorporation Date");
                    frmvalidator.addValidation("CommencementDate", "req", "Please Select Commencement Date");
                    frmvalidator.addValidation("BranchName", "req", "Please Enter Branch Name ");
                    frmvalidator.addValidation("PAN", "req", "Please Enter PAN Number");
                    frmvalidator.addValidation("Designation", "req", "Please Select Designation");
                    frmvalidator.addValidation("LandlineNo", "req", "Please Enter Landline Number");

                }
                debugger;
                if (borrowerTypeId == "I") {

                    frmvalidator.addValidation("NID", "req", "Please Select Title");
                    frmvalidator.addValidation("FirstName", "req", "Please Enter First Name");
                    frmvalidator.addValidation("MiddleName", "req", "Please Enter Middle name");
                    frmvalidator.addValidation("LastName", "req", "Please Enter Last Name");
                    frmvalidator.addValidation("Sex", "req", "Please Select Gender");
                    frmvalidator.addValidation("NationalityId", "req", "Please Select Nationality");
                    frmvalidator.addValidation("DateOfBirth", "req", "Please Select Date Of Birth");
                    frmvalidator.addValidation("PAN", "req", "Please Enter Pan Number");
                    frmvalidator.addValidation("MobileNo", "req", "Please Enter Mobile Number ");

                    //frmvalidator.addValidation("Designation", "req", "Please select Designation");
                }
            });




        });




    </script>


</head>


<body>

        <br/>
    <div class="container" >
        <div class="panel panel-primary " style=" height:800px">
            <div class="panel-heading">
                <label id="lblHeading" class="filter-col control-label labelHead">Borrower Details </label>
            </div>
            <div class="panel-body">
                 @using (Html.BeginForm("AddBorrower", "Borrower", FormMethod.Post,
                            new { enctype = "multipart/form-data", id = "borrower" }))
                        {
                 
                <div class="row">
                    <div class="col-xs-4"></div>
                    <div class="col-xs-4">
                        <div class="form-group">
                            <label id="" class="filter-col control-label label1">Select Type</label>
                            @{
                                List<SelectListItem> ListItems = new List<SelectListItem>();
                                ListItems.Add(new SelectListItem
                                {
                                    Text = "Company",
                                    Value = "C"
                                });
                                ListItems.Add(new SelectListItem
                                {
                                    Text = "Individual",
                                    Value = "I",

                                });

                            }

                            @Html.DropDownListFor(model => model.borrowerType, ListItems, "-- Select Type --", new { @class = "form-control dropdown", id = "lbltype" })
                            @Html.HiddenFor(model => model.borrowerTypeId)
                        </div>
                    </div>
                    <div class="col-xs-4"></div>
                </div>
                <div id="datahide">

                    <div id="tabs" style="overflow:auto;height:500px">
                       
                            <ul >
                                <li>
                                    <a href="#tabs-1" data-toggle="tab" style="font-size: small; color: #000000; font-weight: bold">Entry</a>
                                </li>
                                <li >
                                    <a href="#tabs-2" data-toggle="tab" style="font-size: small; color: #000000; font-weight: bold">Contact Info</a>
                                </li>
                                <li >
                                    <a href="#tabs-3" data-toggle="tab" style="font-size: small; color: #000000; font-weight: bold">Document</a>
                                </li>
                            </ul>
             
                    

                            <div id="tabs-1" class="tab-pane">



                                @Html.ValidationSummary(true)

                                <div id="Title" class="row">
                                    <div class="col-xs-2">
                                        <div class="form-group">
                                            <label id="lblTitle" class="filter-col control-label label1">Title</label>
                                            @Html.DropDownListFor(model => model.NID, ViewBag.Name as SelectList, "select title", new { @class = "form-control dropdown" })
                                            @Html.ValidationMessageFor(model => model.NID)
                                        </div>
                                    </div>


                                    <div class="col-xs-3">
                                        <div class="form-group">


                                            <label id="lblFN" class="filter-col control-label label1">First Name</label>

                                            @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", @onkeypress = "return  AllowAlphabet(event)" })
                                            @Html.ValidationMessageFor(model => model.FirstName)
                                        </div>
                                    </div>
                                    <div class="col-xs-3">
                                        <div class="form-group">
                                            <label id="lblMiddle" class="filter-col control-label label1">Middle Name</label>
                                            @Html.TextBoxFor(model => model.MiddleName, new { @class = "form-control", @onkeypress = " return  AllowAlphabet(event)" })
                                            @Html.ValidationMessageFor(model => model.MiddleName)
                                        </div>
                                    </div>
                                    <div class="col-xs-3">
                                        <div class="form-group">
                                            <label id="lblLast" class="filter-col control-label label1">Last Name</label>
                                            @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", @onkeypress = " return  AllowAlphabet(event)" })
                                            @Html.ValidationMessageFor(model => model.LastName)

                                        </div>
                                    </div>
                                </div>
                                <div id="GD" class="row">
                                    <div class="col-xs-3">
                                        <div class="form-group">
                                            <label id="lblGender" class="filter-col control-label label1">Gender</label>
                                            @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            listItems.Add(new SelectListItem
                            {
                                Text = "Male",
                                Value = "M"
                            });
                            listItems.Add(new SelectListItem
                            {
                                Text = "Female",
                                Value = "F",

                            });

                                            }

                                            @Html.DropDownListFor(model => model.Sex, listItems, "-- Select gender --", new { @class = "form-control dropdown" })
                                            @Html.ValidationMessageFor(model => model.Sex)
                                        </div>
                                    </div>
                                    <div class="col-xs-4">
                                        <div class="form-group">
                                            <label id="lblNation" class="filter-col control-label label1">Nationality</label>
                                           @Html.DropDownListFor(model => model.NationalityId, ViewBag.Nationality as SelectList, "Select Nationality", new { @class = "form-control dropdown" })
                                            @Html.ValidationMessageFor(model => model.NationalityId)
                                       </div>
                                    </div>



                                    <div class="col-xs-4">
                                        <div class="form-group">
                                            <label id="lblDOB" class="filter-col control-label label1">Date Of Birth</label>
                                            @Html.TextBoxFor(model => model.DateOfBirth, new { @type = "date", @class = "form-control" })
                                            <div class="row-error ErrorMessage">
                                                @Html.ValidationMessageFor(modelItem => modelItem.DateOfBirth)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div id="cn" class="row">
                                    <div class="col-xs-4">
                                        <div class="form-group">



                                            <label id="lblCN" class="filter-col control-label label1">Company Name</label>


                                            @Html.TextBoxFor(model => model.CompanyName, new { @class = "form-control", @onkeypress = "return  AllowAlphabet(event)" })
                                            @Html.ValidationMessageFor(model => model.CompanyName)
                                        </div>
                                    </div>


                                    <div class="col-xs-4">
                                        <div class="form-group">

                                            <label id="lblCT" class="filter-col control-label label1">Sub-Division Name</label>
                                          @Html.TextBoxFor(model => model.CompanyType, new { @class = "form-control", @onkeypress = "return  AllowAlphabet(event)" })
                                            @Html.ValidationMessageFor(model => model.CompanyType)
                                        </div>
                                    </div>
                                    <div class="col-xs-4">
                                        <div class="form-group">
                                            <label id="lblBN" class="filter-col control-label label1">Branch Name</label>
                                            @Html.TextBoxFor(model => model.BranchName, new { @class = "form-control", @onkeypress = "return  AllowAlphabet(event)" })
                                            @Html.ValidationMessageFor(model => model.BranchName)
                                        </div>


                                    </div>
                                </div>

                                <div id="ic" class="row">
                                    <div class="col-xs-4">
                                        <div class="form-group">
                                            <label id="lblID" class="filter-col control-label label1">Incorporation Date</label>
                                            @Html.TextBoxFor(model => model.IncorporationDate, new { @type = "date", @class = "form-control", })
                                            @Html.ValidationMessageFor(model => model.IncorporationDate)


                                        </div>
                                    </div>
                                    <div class="col-xs-4">
                                        <div class="form-group">
                                            <label id="lblCD" class="filter-col control-label label1">Commencement Date</label>
                                            @Html.TextBoxFor(model => model.CommencementDate, new { @type = "date", @class = "form-control", id = "Cdate" })

                                            @Html.ValidationMessageFor(model => model.CommencementDate)
                                        </div>
                                    </div>
                                    <div class="col-xs-4">
                                        <div class="form-group">
                                            <label id="" class="filter-col control-label label1">Company Type</label>
                                        @{
                            List<SelectListItem> DesignlistItems = new List<SelectListItem>();
                            DesignlistItems.Add(new SelectListItem
                            {
                                Text = "Propritor",
                                Value = "PP"
                            });
                            DesignlistItems.Add(new SelectListItem
                            {
                                Text = "Partner",
                                Value = "P",

                            });
                            DesignlistItems.Add(new SelectListItem
                            {
                                Text = "Management",
                                Value = "M"
                            });
                                            }

                                            @Html.DropDownListFor(model => model.Designation, DesignlistItems, "-- Select Designation --", new { @class = "form-control dropdown" })
                                            @Html.ValidationMessageFor(model => model.Designation)
                                        </div>
                                    </div>
                                </div>
                                <div id="bn" class="row">
                                </div>
                                @*<div class="inner-wrap" style=" height:120px;width:1000px">
                                    <div style="float:left; width: 425px">*@
                                <div id="" class="row">
                                    <div class="col-xs-4">
                                        <div class="form-group">
                                            <label id="lblPAN" class="filter-col control-label label1">PAN Number</label>
                                            @Html.TextBoxFor(model => model.PAN, new { @class = "form-control", @onblur = "ValidatePAN(this)", @maxlength = "10" })
                                            @Html.ValidationMessageFor(model => model.PAN)
                                        </div>

                                    </div>
                                </div>





                            </div>

                            <div id="tabs-2" class=" tab-pane">



                                @*@using (Html.BeginForm("btnAddClick1", "details", new { id="contactdetails"}))
                        {

                            @Html.ValidationSummary(true)

                            *@
                                <div id="Address" class="row">
                                    <div class="col-xs-6">
                                        <div class="form-group">


                                            <label class="filter-col control-label label1">Address 1</label>
                                            @Html.TextBoxFor(model => model.Address1, new { @class = "form-control", @onkeypress = "return isAlphaNumeric(event)" })
                                            @Html.ValidationMessageFor(model => model.Address1)
                                            @Html.TextBoxFor(model => model.Address2, new { @class = "form-control", @onkeypress = "return isAlphaNumeric(event)" })
                                            @Html.ValidationMessageFor(model => model.Address2)
                                            @Html.TextBoxFor(model => model.Address3, new { @class = "form-control", @onkeypress = "return isAlphaNumeric(event)" })


                                        </div>
                                    </div>

                                    <div class="col-xs-6">
                                        <div class="form-group">

                                            <label id="lblAT" class="filter-col control-label label1">Address Type</label>
                                            <select id="selComtype" name="selComtype" style="color: black" class = "form-control dropdown"></select>
                                            @*@Html.DropDownListFor(model => model.Addressid, (IEnumerable<SelectListItem>)ViewBag.Addressid, "Address Type", new { @class = "form-control dropdown", id = "AddressId" })*@
                                            @*@Html.ValidationMessageFor(model => model.Addressid)*@
                                             <div class="form-group input-field-wrap1">
                        </div>
                                        </div>
                                    </div>
                                </div>




                                <div id="CID" class="row">
                                    <div class="col-xs-6">
                                        <div class="form-group">
                                            <label id="lblC" class="filter-col control-label label1">Country</label>
                                            @Html.DropDownListFor(model => model.CountryId, ViewBag.Country as SelectList, "select Country", new { @id = "ddlCountry", @class = "form-control dropdown" })
                                        </div>
                                    </div>
                                    <div class="col-xs-6">
                                        <div class="form-group">


                                            <label id="lblS" class="filter-col control-label label1">State</label>
                                            @Html.DropDownList("selState", new SelectList(string.Empty, "Value", "Text"), "-- Please select a State --", new { @class = "form-control dropdown" })
                                             <div class="form-group input-field-wrap">
                        </div>
                                             @*<select id="selState1" name="selState1" style="color: black" class = "form-control dropdown"></select>*@
                                            @*<select id="selState" style="color:black"></select>*@
                                        </div>
                                    </div>
                                </div>


                                <div id="CityPIN" class="row">
                                    <div class="col-xs-6">
                                        <div class="form-group">


                                            <label id="lblCI" class="filter-col control-label label1">City </label>
                                            @Html.TextBoxFor(model => model.City, new { @class = "form-control", @onkeypress = "return  AllowAlphabet(event)" })
                                        </div>
                                    </div>
                                    <div class="col-xs-6">
                                        <div class="form-group">
                                            <label id="lblPIN" class="filter-col control-label label1">PIN code</label>
                                            @Html.TextBoxFor(model => model.Pincode, new { @class = "form-control", @onkeypress = "return  isNumber(event)", @maxlength = "6" })

                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-xs-6">
                                        <label id="lblPhoneNo" class="filter-col" style="display: block; font: 18px Arial;
                                       color: #000; margin-bottom: 15px;">Telephone number</label>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-xs-2">
                                        <div class="form-group">
                                            @Html.TextBoxFor(model => model.LandlineCode, new { @class = "form-control", @onkeypress = "return isNumber(event)", @maxlength = "4" })
                                        </div>
                                    </div>

                                    <div class="col-xs-4">
                                        <div class="form-group">
                                            @Html.TextBoxFor(model => model.LandlineNo, new { @class = "form-control", @onkeypress = "return isNumber(event)", @maxlength = "10" })

                                        </div>
                                    </div>

                                </div>
                                <div id="mob">
                                <div class="row">
                                    <div class="col-xs-12">
                                  <label id="lblmn" class="filter-col control-label label1">Mobile Number</label>

                                           </div>
                                </div>

                                <div class="row" >

                                  
                                    <div class="col-xs-2">
                                         
                                        <div class="form-group">
                                            @Html.TextBoxFor(model => model.MobileCode, new { @class = "form-control", @onkeypress = "return isNumber(event)", @maxlength = "4" })

                                        </div>
                                    </div>
                                    <div class="col-xs-4">
                                        <div class="form-group">
                                            @Html.TextBoxFor(model => model.MobileNo, new { @class = "form-control", @onkeypress = "return isNumber(event)", @maxlength = "10" })

                                        </div>
                                    </div>
                             
                                </div>

</div>




                                <div id="email" class="row">
                                    <div class="col-xs-6">
                                        <div class="form-group">

                                            <label id="lblemail" class="filter-col control-label label1">Email Id</label>
                                            @Html.TextBoxFor(model => model.EmailId1, new { @class = "form-control", @onblur = "validateEmail(this)" })

                                        </div>
                                    </div>
                                    <div class="col-xs-6">
                                        <div class="form-group">
                                            <label id="lblemail1" class="filter-col control-label label1">Alternate Email id</label>
                                            @Html.TextBoxFor(model => model.EmailId2, new { @class = "form-control", @onblur = "validateEmail(this)" })

                                        </div>
                                    </div>
                                </div>



                                @*  @Html.HiddenFor(model => model.PAN)


                            @Html.HiddenFor(model => model.fullname)*@








                            </div>

                            <div id="tabs-3" class="tab-pane">

                                @* @using (Html.BeginForm("upload", "details", FormMethod.Post,
                            new { enctype = "multipart/form-data" }))
                            {
                            @Html.ValidationSummary(true)

                            *@
                                  <div id="TAB3" class="row">
                                <div id="PAN" class="row">
                                    <div class="col-xs-6">
                                        <div class="form-group">
                                            <label id="">PAN Number</label>
                                            @Html.TextBoxFor(model => model.PANinv, new { @class = "form-control", @readonly = "true", @onblur = "ValidatePAN(this)", @maxlength = "10" })
                                            @Html.ValidationMessageFor(model => model.PANinv)
                                        </div>

                                    </div>
                                </div>

                                <div id="ComNAME" class="row">
                                    <div class="col-xs-6">
                                        <div class="form-group">
                                            <label id="">Name</label>
                                            @Html.TextBoxFor(model => model.Cname, new { @class = "form-control", @readonly = "true", @onkeypress = "return  AllowAlphabet(event)" })

                                        </div>

                                    </div>
                                </div>
                                <div id="NAME" class="row">
                                    <div class="col-xs-6">
                                        <div class="form-group">
                                            <label id="">Full Name</label>
                                            @Html.TextBoxFor(model => model.FULLANME, new { @class = "form-control", @readonly = "true", @onkeypress = "return  isAlphaNumeric(event)" })
                                        </div>

                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-xs-6">
                                        <div class="form-group">
                                            <label id="" class="filter-col control-label label1">Documemt</label>
                                            @Html.DropDownListFor(model => model.DOC, ViewBag.DOC as SelectList, new { @class = "form-control dropdown" })
                                            @Html.ValidationMessageFor(model => model.DOC)
                                        </div>
                                    </div>
                                </div>

                                <div id="doc" class="row">
                                    <div class="col-xs-6">
                                        <div class="form-group">
                                            <label id="" class="filter-col control-label label1">Document Number</label>
                                            @Html.TextBoxFor(model => model.docid, new { @class = "form-control", @onkeypress = "return  isAlphaNumeric(event)" })
                                        </div>

                                    </div>
                                </div>
                                <div id="IssueDate1" class="row" >
                                    <div class="col-xs-6">
                                        <div class="form-group">
                                            <label id="" class="filter-col control-label label1">Issue Date</label>
                                            @Html.TextBoxFor(model => model.IssueDate, new { @type = "date", @class = "form-control" })
                                        </div>

                                    </div>
                                </div>
                                <div id="Expirydate" class="row">
                                    <div class="col-xs-6">
                                        <div class="form-group">
                                            <label id="" class="filter-col control-label label1">Expiry date</label>
                                            @Html.TextBoxFor(model => model.Expirydate, new {@id="EPD", @type = "date", @class = "form-control" })
                                        </div>

                                    </div>
                                </div>
                                <div id="upload" class="row">
                                    <div class="col-xs-6">
                                        <div class="form-group">
                                            <label for="file" class="filter-col control-label label1">Upload Image:</label>
                                            <input type="file" id="fileToUpload" name="file" style="height: auto; width: auto"/>
                                         <input  id="fileUpload" style="height:auto; width: auto"visible="false"/>
                                        </div>

                                    </div>
                                </div>





                                <div id="" class="container">
                                    <div class="row">
                                        <div class="col-xs-4">
                                        </div>
                                        <div class="col-xs-4">

                                            <input type="submit" id="btnUpload" style="width: auto" name="" value="Save" />

                                        </div>
                                        <div class="col-xs-4">
                                        </div>

                                    </div>
                                     
                                </div>
                                <div class="row">
                                    <div class="col-xs-12">
                                        </div>
                                    </div>
                                <br/>
                      @*            @using (Html.BeginForm("BOD", "details", FormMethod.Post))
                        {
               
                            *@
                                      @*<a href='@Url.Action("BOD", "details")'>*@
                                        
                            </div>
                         </div>
                 <div class="row">
                                    <div class="col-xs-12">
                                        </div>
                                    </div>

                  
                            <div class="container">
                                <div class="row">
                                    <div class="col-xs-4">
                                    </div>
                                    <div class="col-xs-4">
                                        <input type="button" id="btnPrevious" value="Previous" style="display: none" />
                                        <input type="button" id="btnNext" value="Next" />
                                    </div>
                                    <div class="col-xs-4">
                                    </div>
                                </div>
                            </div>   
       

                   
                        <div style="height: 20px">
                        </div>                      
                    </div>



                </div>


                 }
                   @using (Html.BeginForm("AddDirector", "Borrower"))
                                           {
                                      <div id="BOD" class="container">
                                <div class="row">
                                    <div class="col-xs-4">
                                    </div>
                                    <div class="col-xs-4">    
                                        @Html.HiddenFor(model=>model.CompanyName1)    
                                        @Html.HiddenFor(model=>model.ComPAN)   
                                        @*<input type="button" id="btnBOD" value="Add Board Of Director" onclick="window.location.href('@Url.Action("ForgotPassword","Account")')" />*@
                                        @*<input type="button"  id="btnBOD" value="Add Board Of Director" onclick="location.href='@Url.Action("Delete", "movies")'" />*@                               
                                        <input type="submit" id="btnBOD" value="Add Board Of Director" />
                                    </div>
                                    <div class="col-xs-4">
                                    </div>

                                </div>
                            </div>
                                //</a>
                        }
            </div>





        </div>



    </div>

</body>
</html>

<script type="text/javascript">
    $(function () {

        $('#document').ready(function () {
            debugger;
            $.ajax({
                url: '/Borrower/FullName/',
                type: 'POST',
                data: {},
                success: function (data) {

                    debugger;
                    if (data != null) {
                        var vdata = data;
                        $("#fullname").val(vdata);

                    }
                }

            });
        });
    });
</script>

<script type="text/javascript">
    $(function () {

        $('#document').ready(function () {
            debugger;
            $.ajax({
                url: '/Borrower/ComName/',
                type: 'POST',
                data: {},
                success: function (data) {

                    debugger;
                    if (data != null) {
                        var vdata = data;
                        $("#cname").val(vdata);

                    }
                }

            });
        });
    });
</script>
<script type="text/javascript">
  

        $('#DOC').change(function () {
            debugger;



            var value = $('#DOC').val();
            if (value == '1') {

                var pan = $('#PAN').val();
                var docid = pan;
                $('#docid').val(docid);

           

                $('#IssueDate1').hide();
                $('#Expirydate').hide();
                $('#docid').attr("readonly", true)
          



            } else {

                   
                var i = " ";
                $('#docid').val(i);
                $('#docid').attr("readonly", false)
                $('#IssueDate1').show();
                $('#Expirydate').show();
                $('#IssueDate').removeAttr("disabled", "disabled")
                $('#EPD').removeAttr("disabled", "disabled")

            }
        });


    $('#btnBOD').click(function () {
        debugger;
        var a = $('#CompanyName').val();
        var b = $('#PAN').val();
          @*var url = '@Url.Action("BOD", "details")';        
        location.href =url;*@
          $('#CompanyName1').val(a);
          $('#ComPAN').val(b);
      });


</script>

<script type="text/javascript">
    $("#ddlCountry").change(function () {
        debugger;
        var countryid = $("#ddlCountry").val();

        var url = '@Url.Action("StateList", "Borrower")';

        $.post(url, { CountryId: countryid }, function (data) {

            //debugger;
            $("#selState").empty().append($("<option></option>").val(-1).html('Select'));

            $.each(data, function (Key, item) {
                //debugger;
                $("#selState").append($("<option></option>").val(item.Value).html(item.Text));
            });
        });
    });

    $(function () {
        $('#ddlCountry').change(function () {
            debugger;
            var countryid = $("#ddlCountry").val();
            debugger;
            $.ajax({
                url: '/Borrower/CountryCode/',
                type: 'POST',
                data: { countryid: countryid },
                success: function (data) {

                    debugger;
                    if (data != null) {
                        var vdata = data;
                       
                        if (vdata == "+260") {
                            $("#LandlineCode").val(vdata);
                            $("#MobileCode").val(vdata);

                        }
                        else {
                            $("#LandlineCode").val("+022");
                            $("#MobileCode").val(vdata);
                        }

                    }
                }

            });
        });
    });


    //$('#btnUpload').click(function () {
    //$.ajax({
    //    url: '/details/BOD/',
    //    type: 'POST',
    //debugger;
    //$("#TAB3").show();

    //});

</script>
<script type="text/javascript">
    function FormEnable() {
        debugger;
        $('#lbltype').attr("disabled", true)
        //$('#NID').attr("disabled", true)
        //$('#FirstName').attr("readonly", true)
        //$('#MiddleName').attr("readonly", true)
        //$('#LastName').attr("readonly", true)
        //$('#Sex').attr("disabled", true)
        //$('#NationalityId').attr("disabled", true)
        //$('#DateOfBirth').attr("readonly", true)
        $('#Address1').attr("readonly", true)
        $('#Address2').attr("readonly", true)
        $('#Address3').attr("readonly", true)
        $('#Country').attr("disabled", true)
        $('#selState').attr("disabled", true)
        $('#selState1').attr("disabled", true)
        $('#seltype').attr("disabled", true)
        $('#City').attr("readonly", true)
        $('#Pincode').attr("readonly", true)
        $('#LandlineCode').attr("readonly", true)
        $('#LandlineNo').attr("readonly", true)
        $('#MobileCode').attr("readonly", true)
        $('#MobileNo').attr("readonly", true)
        $('#EmailId1').attr("readonly", true)
        $('#EmailId2').attr("readonly", true)
        $('#CompanyName').attr("readonly", true)
        $('#CompanyType').attr("readonly", true)
        $('#BranchName').attr("readonly", true)
        $('#IncorporationDate').attr("disabled", true)
        $('#Cdate').attr("disabled", true)
        $('#Designation').attr("disabled", true)
        $('#PAN').attr("readonly", true)
        $('#selComtype').attr("disabled", true)
        $('#PANinv').attr("readonly", true)
        $('#Cname').attr("readonly", true)
        $('#FULLANME').attr("readonly", true)
        $('#DOC').attr("disabled", true)
        $('#docid').attr("readonly", true)
        $('#IssueDate').attr("disabled", true)
        $('#Expirydate').attr("disabled", true)
        $('#fileToUpload').attr("disabled", true)
        $('#fileUpload').attr("disabled", true)

        //$(function () { $('#dtpComm :input').attr("readonly", false); })       
    };
 
    function clearfields() {
        debugger;
        $('#lbltype').val("");
        $('#NID').val("");
        $('#FirstName').val("");
        $('#MiddleName').val("");
        $('#LastName').val("");
        $('#Sex').val("");
        $('#NationalityId').val("");
        $('#DateOfBirth').val("");
        $('#Address1').val("");
        $('#Address2').val("");
        $('#Address3').val("");
        $('#Country').val("");
        $('#selState').val("");
        $('#selState1').val("");
        $('#seltype').val("");
        $('#City').val("");
        $('#Pincode').val("");
        $('#LandlineCode').val("");
        $('#LandlineNo').val("");
        $('#MobileCode').val("");
        $('#MobileNo').val("");
        $('#EmailId1').val("");
        $('#EmailId2').val("");
        $('#Designation').val("");
       $('#PAN').val("");
        $('#selComtype').val("");
        $('#PANinv').val("");
        $('#Cname').val("");
        $('#FULLANME').val("");
        $('#DOC').val("");

        $('#docid').val("");
        $('#IssueDate').val("");
        $('#Expirydate').val("");
        $('#fileToUpload').val("");
        $('#fileUpload').val("");

        //$(function () { $('#dtpComm :input').attr("readonly", false); })       
    };






</script>
<script type="text/javascript">
    $("#lbltype").change(function () {
        var Comtype = $("#lbltype").val();
        $("#borrowerTypeId").val(Comtype);
      //$("#lbltype").attr("disabled", true);
        var url = '@Url.Action("AddressTypeList", "Borrower")';

        $.post(url, { Comtype: Comtype }, function (data) {

            debugger;
            $("#selComtype").empty().append($("<option></option>").val(-1).html('Select'));

            $.each(data, function (Key, item) {
                debugger;
                $("#selComtype").append($("<option></option>").val(item.Value).html(item.Text));
            });
        });
    });
    </script>