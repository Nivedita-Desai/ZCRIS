@model CreditRatingModel.Model.grid
@{
    ViewBag.Title = "ViewDetails1";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
        //var a = new WebGrid(Model);
        //a.Pager(WebGridPagerModes.All);
}

@*<link href='http://fonts.googleapis.com/css?family=Bitter' rel='stylesheet' type='text/css'>*@
@*<style type="text/css">
    .form-style-10 {
        width: 1200px;
        padding: 30px;
        margin: 40px auto;
        background: #FFF;
        border-radius: 10px;
        -webkit-border-radius: 10px;
        -moz-border-radius: 10px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.13);
        -moz-box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.13);
        -webkit-box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.13);
    }

        .form-style-10 .inner-wrap {
            padding: 20px;
            background: #F8F8F8;
            border-radius: 4px;
            margin-bottom: 9px;
            float: left;
        }

        .form-style-10 h1 {
            background: #2A88AD;
            padding: 20px 30px 15px 30px;
            margin: -30px -30px 30px -30px;
            border-radius: 10px 10px 0 0;
            -webkit-border-radius: 10px 10px 0 0;
            -moz-border-radius: 10px 10px 0 0;
            color: #fff;
            text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.12);
            font: normal 30px 'Bitter', serif;
            -moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);
            -webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);
            box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);
            border: 1px solid #257C9E;
        }

            .form-style-10 h1 > span {
                display: block;
                margin-top: 2px;
                font: 18px Arial, Helvetica, sans-serif;
            }

        .form-style-10 label {
            display: block;
            font: 18px Arial, Helvetica, sans-serif;
            color: #219EEA;
            margin-bottom: 15px;
        }

        .form-style-10 input[type="text"],
        .form-style-10 input[type="date"],
        .form-style-10 input[type="datetime"],
        .form-style-10 input[type="email"],
        .form-style-10 input[type="number"],
        .form-style-10 input[type="search"],
        .form-style-10 input[type="time"],
        .form-style-10 input[type="url"],
        .form-style-10 input[type="password"],
        .form-style-10 textarea,
        .form-style-10 select {
            display: block;
            box-sizing: border-box;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            width: 70%;
            padding: 10px;
            border-radius: 3px;
            -webkit-border-radius: 3px;
            -moz-border-radius: 6px;
            border: 2px solid #27413E;
            box-shadow: inset 0px 1px 1px rgba(0, 0, 0, 0.33);
            -moz-box-shadow: inset 0px 1px 1px rgba(0, 0, 0, 0.33);
            -webkit-box-shadow: inset 0px 1px 1px rgba(0, 0, 0, 0.33);
        }

        .form-style-10 .section {
            font: normal 20px 'Bitter', serif;
            color: #2A88AD;
            margin-bottom: 5px;
        }

            .form-style-10 .section span {
                background: #2A88AD;
                padding: 5px 10px 5px 10px;
                position: absolute;
                border-radius: 50%;
                -webkit-border-radius: 50%;
                -moz-border-radius: 50%;
                border: 4px solid #fff;
                font-size: 14px;
                margin-left: -45px;
                color: #fff;
                margin-top: -3px;
            }

        .form-style-10 input[type="button"],
        .form-style-10 input[type="submit"] {
            background: #2A88AD;
            padding: 8px 20px 8px 20px;
            border-radius: 5px;
            -webkit-border-radius: 5px;
            -moz-border-radius: 5px;
            color: #fff;
            text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.12);
            font: normal 30px 'Bitter', serif;
            -moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);
            -webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);
            box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);
            border: 1px solid #257C9E;
            font-size: 15px;
        }

            .form-style-10 input[type="button"]:hover,
            .form-style-10 input[type="submit"]:hover {
                background: #2A6881;
                -moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);
                -webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);
                box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);
              
            }

        .form-style-10 .privacy-policy {
            float: right;
            width: 250px;
            font: 12px Arial, Helvetica, sans-serif;
            color: #4D4D4D;
            margin-top: 10px;
            text-align: right;
        }
</style>*@
@*<style type="text/css">
    .MyTable {
        font-family: Tahoma, Arial, Helvetica, sans-serif;
        font-size: 11px;
        color: #000000;
        height: 100px;
        width: 1080px;
        border: 1px solid Black;
        
    }
</style*@

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Branch Master</title>
    <link href="@Url.Content("~/Content/bootstrap.css")" rel="stylesheet" type="text/css" />
    @*<link href="@Url.Content("~/Content/tabPanel.css")" rel="stylesheet" type="text/css" />*@
    <script src="@Url.Content("~/Scripts/js/myjquery.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery-2.1.4.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/js/myjquery.js")" type="text/javascript"></script>
</head>
<body>
    <form id="form1" action="~/user/Edit">
        @*    <div class="form-style-10">*@
        <div class="row" style="height:50px">
            </div>
            <div class="container">
                <div class="panel panel-primary">
                    <div class="panel-heading"> <label id="lblHeading" class="filter-col control-label labelHead">Financial Institute Branch Details</label>  </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-xs-6">
                                <div class="form-group">
                                    <label id="lblIN" class="filter-col control-label label1">Institute Name :</label>
                                    @*<input id="txtCity" class="form-control input-10m" type="text"  value=" @Html.DisplayFor(model => model.City)"/>*@
                                    @Html.TextBoxFor(modelItem => modelItem.Name, new { @class = "form-control", @id = "Name", onkeypress = "return AllowAlphabet(event)", @readonly = "true" })
                                </div>
                            </div>
                            <div class="col-xs-6">
                                <div class="form-group">
                                    <label id="lblBC" class="filter-col control-label label1">Bank Code :</label>
                                    @*<input id="txtPincode" class="form-control input-10m" type="text" value=" @Html.DisplayFor(model => model.Pincode)" />*@
                                    @Html.TextBoxFor(modelItem => modelItem.BankCode, new { @class = "form-control", @id = "BankCode", onkeypress = "return isAlphaNumeric(event)", onblur = "checkLengthForBankCode(this)", maxlength = "20", @readonly = "true" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-6">
                                <div class="form-group">
                                    <label id="lblCat" class="filter-col control-label label1">Category Name :</label>
                                    @*<input id="txtCity" class="form-control input-10m" type="text"  value=" @Html.DisplayFor(model => model.City)"/>*@
                                    @Html.DropDownListFor(model => model.Category, ViewBag.Category as SelectList, new { @class = "form-control", @id = "Category", @readonly = "true" })
                                    @*@Html.TextBoxFor(modelItem => modelItem.Category, new { @class = "form-control", @id = "Category", @readonly = "true" })*@
                                </div>
                            </div>
                            <div class="col-xs-6">
                                <div class="form-group">
                                    <label id="lblCT" class="filter-col control-label label1">Registration No. :</label>
                                    @*<input id="txtPincode" class="form-control input-10m" type="text" value=" @Html.DisplayFor(model => model.Pincode)" />*@
                                    @Html.TextBoxFor(modelItem => modelItem.RegistrationNumber, new { @class = "form-control", @id = "RegistrationNumber", onkeypress = "return isAlphaNumeric(event)", onblur = "checkLength(this)", maxlength = "20", @readonly = "true" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-6">
                                <div class="form-group">
                                    <label id="lblBName" class="filter-col control-label label1">Branch Name :</label>
                                    @*<input id="txtCity" class="form-control input-10m" type="text"  value=" @Html.DisplayFor(model => model.City)"/>*@
                                    @Html.TextBoxFor(modelItem => modelItem.BranchName, new { @class = "form-control", @id = "BranchName", onkeypress = "return AllowAlphabet(event)", onblur = "checkLength(this)", maxlength = "20", @readonly = "true" })
                                </div>
                            </div>
                            <div class="col-xs-6">
                                <div class="form-group">
                                    <label id="lblBRc" class="filter-col control-label label1">Branch Code :</label>
                                    @*<input id="txtPincode" class="form-control input-10m" type="text" value=" @Html.DisplayFor(model => model.Pincode)" />*@
                                    @Html.TextBoxFor(modelItem => modelItem.BranchCode, new { @class = "form-control", @id = "BranchCode", onkeypress = "return isAlphaNumeric(event)", onblur = "checkLengthForBankCode(this)", maxlength = "20", @readonly = "true" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-6">
                                <div class="form-group">
                                    <label id="lblSC" class="filter-col control-label label1">Swift Code :</label>
                                    @*<input id="txtCity" class="form-control input-10m" type="text"  value=" @Html.DisplayFor(model => model.City)"/>*@
                                    @Html.TextBoxFor(modelItem => modelItem.SwiftCode, new { @class = "form-control", @id = "SwiftCode", onkeypress = "return isAlphaNumeric(event)", onblur = "checkLength(this)", maxlength = "20", @readonly = "true" })
                                </div>
                            </div>
                            @*    <div class="col-xs-6">
                                <div class="form-group">
                                    <label id="lblPincode" class="filter-col control-label label1">Pincode :</label>
                                    @Html.TextBoxFor(modelItem =>modelItem.Pincode , new { @class = "form-control" ,@id = "Pincode" })
                                </div>
                            </div>*@
                        </div>

                        @Html.HiddenFor(model => model.Id)
                        <div class="row">
                            <div class="form-group">
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-6">
                                <div class="form-group">
                                    <label id="lblAdd1" class="filter-col control-label label1">Address :</label>
                                    @*<input id="txtAdd1" class="form-control input-10m" type="text" value=" @Html.DisplayFor(model => model.Address1)" />*@
                                    @Html.TextBoxFor(modelItem => modelItem.Address1, new { @class = "form-control", @id = "Address1", onkeypress = "return AllowAlphabet(event)", @readonly = "true" })
                                    @Html.TextBoxFor(modelItem => modelItem.Address2, new { @class = "form-control", @id = "Address2", onkeypress = "return AllowAlphabet(event)", @readonly = "true" })
                                    @Html.TextBoxFor(modelItem => modelItem.Address3, new { @class = "form-control", @id = "Address3", onkeypress = "return AllowAlphabet(event)", @readonly = "true" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-xs-6">
                                <div class="form-group">
                                    <label id="lblCountry" class="filter-col control-label label1">Country :</label>
                                    @*  @Html.DropDownListFor(modelItem => item.Country, ViewBag.CountryList as IEnumerable<SelectListItem>,new {@class="form-control", @id = "Country"})*@
                                    @*     <select id="selCountry" class="dropdown" ></select>*@

                                    @*@Html.DropDownListFor(modelItem => item.Country, @ViewBag.CountryList as IEnumerable<SelectListItem>, new {@id = "Country"})*@
                                    @Html.DropDownListFor(model => model.CountryId, ViewBag.CountryList as SelectList, new { @id = "Country", @class = "form-control dropdown", @readonly = "true" })
                                    @*@Html.DropDownList("ddl", ViewBag.CountryList as SelectList, new { @id = "Country" })*@
                                </div>
                            </div>
                            <div class="col-xs-6">
                                <div class="form-group">
                                    <label id="lblState" class="filter-col control-label label1">State :</label>
                                    @*  @Html.DropDownListFor(modelItem => item.State, ViewBag.StateList1 as IEnumerable<SelectListItem>,item.State,new { @class = "form-control" })*@
                                    @*  <select id="selState" style="color: black" class="form-control"></select>*@
                                    @*@Html.DropDownListFor(model=>item.State, ViewBag.StateList1 as SelectList)*@
                                    @Html.DropDownListFor(model => model.State1, ViewBag.StateList1 as SelectList, new { @id = "selState", @class = "form-control dropdown", @readonly = "true" })
                                    @*@Html.DropDownList("selState", ViewBag.StateList1 as SelectList, @Html.DisplayFor(model => model.State1))*@
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-xs-6">
                                <div class="form-group">
                                    <label id="lblCity" class="filter-col control-label label1">City :</label>
                                    @*<input id="txtCity" class="form-control input-10m" type="text"  value=" @Html.DisplayFor(model => model.City)"/>*@
                                    @Html.TextBoxFor(modelItem => modelItem.City, new { @class = "form-control", @id = "City", onkeypress = "return AllowAlphabet(event)", onblur = "checkLength(this)", maxlength = "20", @readonly = "true" })
                                </div>
                            </div>
                            <div class="col-xs-6">
                                <div class="form-group">
                                    <label id="lblPincode" class="filter-col control-label label1">Pincode :</label>
                                    @*<input id="txtPincode" class="form-control input-10m" type="text" value=" @Html.DisplayFor(model => model.Pincode)" />*@
                                    @Html.TextBoxFor(modelItem => modelItem.Pincode, new { @class = "form-control", @id = "Pincode", @onkeypress = "return isNumber(event)", onblur = "checkLengthForPincode(this)", maxlength = "6", @readonly = "true" })
                                </div>
                            </div>
                        </div>
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">
                                @*<div class="row">
                <div class="col-xs-12">
                    <div class="form-group">*@
                                <label id="lblContPersonDetails" class="filter-col control-label label2">Contact Details :</label>
                                @*<textarea id="txtContPersonDetails" class="form-control input-sm"></textarea>*@
                                @*</div>
                    </div>
                </div>*@
                            </legend>
                            <div class="row">
                                <div class="col-xs-6">
                                    <label id="lblPhoneNo" class="filter-col control-label label1">Financial Institute Contact No :</label>
                                </div>
                                <div class="col-xs-6">
                                    <label id="lblEmailId" class="filter-col control-label label1">Financial Institute Email Id :</label>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-1">
                                    <div class="form-group">
                                        @*<input id="txtContryCode" class="form-control input-10m" type="text"  value=" @Html.DisplayFor(model => model.Code)"/>*@
                                        @Html.TextBoxFor(modelItem => modelItem.Code, new { @class = "form-control", @id = "Code", onkeypress = "return isNumber(event)", onblur = "checkLengthForCode(this)", maxlength = "3", @readonly = "true" })
                                    </div>
                                </div>
                                <div class="col-xs-5">
                                    <div class="form-group">
                                        @*<input id="txtContactNo" class="form-control input-10m" type="text" value=" @Html.DisplayFor(model => model.ContactNo)" />*@
                                        @Html.TextBoxFor(modelItem => modelItem.ContactNo, new { @class = "form-control", @id = "ContactNo", @onkeypress = "return isNumber(event)", onblur = "checkLengthForContact(this)", maxlength = "10", @readonly = "true" })
                                    </div>
                                </div>
                                <div class="col-xs-1">
                                </div>
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        @*<input id="txtEmailId" class="form-control input-10m" type="text" value=" @Html.DisplayFor(model => model.FinancialInstituteEmailId1)" />*@
                                        @Html.TextBoxFor(modelItem => modelItem.FinancialInstituteEmailId1, new { @class = "form-control", @id = "FinancialInstituteEmailId1", @readonly = "true"})
                                    </div>
                                </div>
                            </div>
                            @*    <div class="row">
                <div class="col-xs-6">
                    <div class="form-group">
                        <label id="lblContPersonDetails" class="filter-col control-label label1">Financial Institute Contact No :</label>
                        @Html.TextBoxFor(modelItem =>modelItem.FinancialInstituteContact , new { @class = "form-control" ,@id = "FinancialInstituteContact",@onkeypress="return isNumber(event)"  })
                    </div>
                </div>

            </div>*@


                            <div class="row">
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblPerson1Contact" class="filter-col control-label label1">Person 1 Contact Name :</label>
                                        @*<input id="txtPerson1Contact" class="form-control input-10m" type="text" value=" @Html.DisplayFor(model => model.ContactPerson1)" />*@
                                        @Html.TextBoxFor(modelItem => modelItem.ContactPerson1, new { @class = "form-control", @id = "ContactPerson1", onkeypress = "return AllowAlphabet(event)", @readonly = "true" })
                                    </div>
                                </div>
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblPerson2Contact" class="filter-col control-label label2">Person 2 Contact Name :</label>
                                        @*<input id="txtPerson2Contact" class="form-control input-10m" type="text" value=" @Html.DisplayFor(model => model.ContactPerson2)" />*@
                                        @Html.TextBoxFor(modelItem => modelItem.ContactPerson2, new { @class = "form-control", @id = "ContactPerson2", onkeypress = "return AllowAlphabet(event)", @readonly = "true" })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblPerson1Name" class="filter-col control-label label1">Person 1 Contact Mobile :</label>
                                        @Html.TextBoxFor(modelItem => modelItem.ContactPerson1Mobile, new { @class = "form-control", @id = "ContactPerson1Mobile", @onkeypress = "return isNumber(event)", onblur = "checkLengthForContact(this)", maxlength = "10", @readonly = "true" })
                                        @*<input id="txtPerson1name" class="form-control input-10m" type="text" value=" @Html.DisplayFor(model => model.ContactPerson1Mobile)" />*@
                                    </div>
                                </div>
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblPerson2Name" class="filter-col control-label label2">Person 2 Contact Mobile :</label>
                                        @Html.TextBoxFor(modelItem => modelItem.ContactPerson2Mobile, new { @class = "form-control", @id = "ContactPerson2Mobile", @onkeypress = "return isNumber(event)", onblur = "checkLengthForContact(this)", maxlength = "10", @readonly = "true" })
                                        @*<input id="txtPerson2name" class="form-control input-10m" type="text" value=" @Html.DisplayFor(model => model.ContactPerson2Mobile)" />*@
                                    </div>
                                </div>
                            </div>



                            <div class="row">
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblPerson1Email" class="filter-col control-label label1">Person 1 Email ID :</label>
                                        @Html.TextBoxFor(modelItem => modelItem.ContactPerson1EmailId, new { @class = "form-control", @id = "ContactPerson1EmailId", @readonly = "true"})
                                        @*<input id="txtPerson1Email" class="form-control input-10m" type="text" value=" @Html.DisplayFor(model => model.ContactPerson1EmailId)" />*@
                                    </div>
                                </div>
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblPerson2Email" class="filter-col control-label label2">Person 2 Email ID :</label>
                                        @Html.TextBoxFor(modelItem => modelItem.ContactPerson2EmailId, new { @class = "form-control", @id = "ContactPerson2EmailId", @readonly = "true"})
                                        @*<input id="txtPerson2Email" class="form-control input-10m" type="text" value=" @Html.DisplayFor(model => model.ContactPerson2EmailId)" />*@
                                    </div>
                                </div>
                            </div>

                         </fieldset>


                            <div class="row">
                                <div class="col-xs-4">
                                </div>
                                <div class="col-xs-2">
                                    <div class="form-group">
                                        <input id="btnEdit" type="button" value="Edit" />
                                        <input id="btnSave" type="submit" value="Save" hidden="true" />

                                        @*      <input id="btnEdit" type="button" name="Edit" value="Edit" onclick="UpdateProduct()"/>*@
                                    </div>
                                </div>
                                <div class="col-xs-2">
                                    @*              <button id="btnClear" type="button" name="RESET">RESET</button>*@
                                </div>
                                <div class="col-xs-4">
                                </div>
                            </div>
</div>
                </div>
            </div>
</form>
</body>
</html>
<script type="text/javascript">
    $("#Country").change(function () {
        var countryid = $("#Country").val();
        // alert(countryid);
        var url = '@Url.Action("StateList", "user")';
        // alert(url);
        $.post(url, { CountryId: countryid }, function (data) {
            //alert(countryid);
            debugger;
            //alert(data);
            //$("#selState").html('');
            //$("#selState").append($("<option></option>").val(0).html('Select'));
            $("#selState").empty().append($("<option></option>").val(-1).html('Select'));

            $.each(data, function (Key, item) {
                //alert(data.d);
                //alert(Key);
                //alert(item.Id);
                //alert(item.State);

                debugger;
                $("#selState").append($("<option></option>").val(item.Value).html(item.Text));
            });
        });
    });
    function isNumber(evt) {
        debugger;
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57)) {
            alert('Please Enter Numbers Only');
            return false;

        }
        return true;
    }
</script>
      <script type="text/javascript">
     $(function () {
         $('#Country').change(function () {
             var countryid = $("#Country").val();
             debugger;
                $.ajax({
                    url: '/user/CountryCode/',
                    type: 'POST',
                    data: { countryid: countryid },
                    success: function (data) {
                       
                        debugger;
                        if (data != null) {
                            var vdata = data;
                            $("#Code").val(vdata);
                          
                        }
                    }

                });
            });
     });
          </script>

<script type="text/javascript">
    $('#btnEdit').click(function () {
        debugger;
        $('#Name').attr("readonly", false)
        $('#BankCode').attr("readonly", false)
        $('#Category').attr("readonly", false)
        $('#RegistrationNumber').attr("readonly", false)
        $('#BranchName').attr("readonly", false)
        $('#BranchCode').attr("readonly", false)
        $('#SwiftCode').attr("readonly", false)
        $('#Address1').attr("readonly", false)
        $('#Address2').attr("readonly", false)
        $('#Address3').attr("readonly", false)
        $('#Country').attr("readonly", false)
        $('#selState').attr("readonly", false)
        $('#City').attr("readonly", false)
        $('#Pincode').attr("readonly", false)
        $('#Code').attr("readonly", false)
        $('#ContactNo').attr("readonly", false)
        $('#FinancialInstituteEmailId1').attr("readonly", false)
        $('#ContactPerson1').attr("readonly", false)
        $('#ContactPerson2').attr("readonly", false)
        $('#ContactPerson1Mobile').attr("readonly", false)
        $('#ContactPerson2Mobile').attr("readonly", false)
        $('#ContactPerson1EmailId').attr("readonly", false)
        $('#ContactPerson2EmailId').attr("readonly", false)

        //$(function () { $('#dtpIncorp :input').attr("readonly", false); })
        //$(function () { $('#dtpComm :input').attr("readonly", false); })
        debugger;
        $('#btnSave').show();
        $('#btnEdit').hide();
    });
</script>

     @* <script type="text/javascript">
          function UpdateProduct() {
              debugger;
              var Id = $('#Id').val();
              var Name = $("#Name").val();
              var UserName = $("#UserName").val();
              var Password = $("#Password").val();
              var RegistrationNo = $("#RegistrationNo").val();

              var product = {
                  "Id": Id, "Name": Name,
                  "UserName": UserName, "Password": Password, "RegistrationNo": RegistrationNo
              };

              $.post('/Demo/Edit', product,
              function (data) { if (data == 0) { location = location.href; } }, 'json');

          }
</script>*@

         

