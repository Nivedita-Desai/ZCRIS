@model CreditRatingModel.Model.EducationLoanDisbursment_Metadata
@using CreditRatingModel.Model

@{
    ViewBag.Title = "ADD";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}
<br />
<link href="@Url.Content("~/CSS/bootstrap-3.3.2.min.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/CSS/bootstrap-multiselect.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/CSS/prettify.css")" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/jquery-2.1.4.min.js")" type="text/javascript"></script>
@*<script src="@Url.Content("~/js/bootstrap.min.js")" type="text/javascript"></script>*@
<script src="@Url.Content("~/js/bootstrap-3.3.2.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/js/prettify.js")" type="text/javascript"></script>
<script src="@Url.Content("~/js/bootstrap-multiselect.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/js/myjquery.js")" type="text/javascript"></script>


<script type="text/javascript">

    $(document).ready(function () {
        debugger;
     
        $('#LoanAccountNo').attr("readonly", true);
        $("#DisburseAmount").val("0.00");
        $("#BalanceAmount").val("0.00");

        $('#Fee').attr("readonly", true);
        $('#DisburseAmount').attr("readonly", true);
        $('#BalanceAmount').attr("readonly", true);
       // $('#LoanAmount').attr("readonly", true);
        $('#Status').attr("readonly", true);
        $('#ClosureDate').attr("readonly", true);
        $('#LoanTypeId').prop("disabled", true);
        

        var today = new Date();
       

    
        var date = formatDate(today);
        $("#DateOfBirth").attr('max', date);
        $("#issuedDate").attr('min', date);
        $("#TranDate").attr('min', date);
        //$("#LoanType").empty().append($("<option></option>").val(-1).html('Select'));
  
    });


    function formatDate(date) {
        var d = new Date(date),
            month = '' + (d.getMonth() + 1),
            day = '' + d.getDate(),
            year = d.getFullYear();

        if (month.length < 2) month = '0' + month;
        if (day.length < 2) day = '0' + day;

        return [year, month, day].join('-');
    }

</script>


@*@using (Html.BeginForm("ADD", "EducationLoanDisbursment", FormMethod.Post,
                            new { id = "EduLoanDis" })
                            )
{ 
    *@
<div class="container">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <label id="lblHeading" class="filter-col control-label labelHead">Education Loan Disbursement</label>
            </div>
            <div class="panel-body">
                <div id="tabs">
                    @*       <div class="tabbable-panel">
                        <div class="tabbable-line">*@
                    <ul>
                        <li>
                            <a href="#tabs-1" data-toggle="tab" style="font-size: small; color: #000000; font-weight: bold">Personal Details</a>
                        </li>
                        <li>
                            <a href="#tabs-2" data-toggle="tab" style="font-size: small; color: #000000; font-weight: bold">Loan Details</a>
                        </li>
                        <li>
                            <a href="#tabs-3" data-toggle="tab" style="font-size: small; color: #000000; font-weight: bold">Disbursement Details</a>

                        </li>
                    </ul>
                    @* <div class="tab-content">*@
                    <div id="tabs-1" class="tab-pane">
                        @*  @using (Html.BeginForm("AddStudentPersonalInfo", "EducationLoanDisbursment"))
                                        {
                                            *@
                        <br />
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">
                                <label id="lblPD" class="filter-col control-label label2">Personal Details </label>
                            </legend>
                            <div class="row">
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblNID" class="filter-col control-label label1">National Registration Code(NRC) :</label>
                                        @Html.TextBoxFor(model => model.NId, new { @class = "form-control input-sm", @onkeypress = "return isNRCNumber(event)", @onblur = " checkLengthForNRC(this)", @maxlength = "13" })
                                    </div>
                                </div>
                            </div>
                            <div id="Title" class="row">
                                <div class="col-xs-3">
                                    <div class="form-group">
                                        <label id="lblTitle" class="filter-col control-label label1">Title</label>
                                        @Html.DropDownListFor(model => model.TitleId1, ViewBag.TitleId as SelectList, "select title", new { @class = "form-control dropdown" })
                                        @Html.ValidationMessageFor(model => model.TitleId)
                                    </div>
                                </div>


                                <div class="col-xs-3">
                                    <div class="form-group">


                                        <label id="lblFN" class="filter-col control-label label1">First Name</label>

                                        @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", @onkeypress = "return  AllowAlphabet(event)", @maxlength = "100" })
                                        @Html.ValidationMessageFor(model => model.FirstName)
                                    </div>
                                </div>
                                <div class="col-xs-3">
                                    <div class="form-group">
                                        <label id="lblMiddle" class="filter-col control-label label1">Middle Name</label>
                                        @Html.TextBoxFor(model => model.MiddleName, new { @class = "form-control", @onkeypress = " return  AllowAlphabet(event)", @maxlength = "100" })
                                        @Html.ValidationMessageFor(model => model.MiddleName)
                                    </div>
                                </div>
                                <div class="col-xs-3">
                                    <div class="form-group">
                                        <label id="lblLast" class="filter-col control-label label1">Last Name</label>
                                        @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", @onkeypress = " return  AllowAlphabet(event)", @maxlength = "100" })
                                        @Html.ValidationMessageFor(model => model.LastName)

                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-xs-4">
                                    <div class="form-group">
                                        <label id="lblDOB" class="filter-col control-label label1">Date Of Birth</label>
                                        @Html.TextBoxFor(model => model.DateOfBirth, new { @type = "date", @class = "form-control" })
                                    </div>
                                </div>
                                <div class="col-xs-4">
                                    <div class="form-group">
                                        <label id="lblGender" class="filter-col control-label label1">Gender</label>
                                        @{
    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "Male",
        Value = "M"
    });
    listItems.Add(new SelectListItem
    {
        Text = "Female",
        Value = "F",

    });
                                        }

                                        @Html.DropDownListFor(model => model.Sex, listItems, "-- Select Gender --", new { @class = "form-control dropdown" })
                                        @Html.ValidationMessageFor(model => model.Sex)
                                    </div>
                                </div>
                                <div class="col-xs-4">
                                    <div class="form-group">
                                        <label id="lblNa" class="filter-col control-label label1">Nationality :</label>
                                        @Html.DropDownListFor(model => model.NationalityId, ViewBag.Nationality as SelectList, "Select Nationality", new { @class = "form-control dropdown" })
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <br />
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">
                                <label id="lblConD" class="filter-col control-label label2">Contact Details </label>
                            </legend>
                            <div class="row">
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblSAdd" class="filter-col control-label label1">Address:</label>
                                        @*                                                        @Html.TextAreaFor(model => model.StudentAddress, new { @id = "txtSAdd", @class = "form-control input-sm", @onkeypress = "return isAlphaNumeric(event)", @maxlength = "300"})*@
                                        @Html.TextBoxFor(model => model.Address1, new { @class = "form-control input-sm", @onkeypress = "return isAlphaNumeric(event)", @maxlength = "100" })
                                        @Html.TextBoxFor(model => model.Address2, new { @class = "form-control input-sm", @onkeypress = "return isAlphaNumeric(event)", @maxlength = "100" })
                                        @Html.TextBoxFor(model => model.Address3, new { @class = "form-control input-sm", @onkeypress = "return isAlphaNumeric(event)", @maxlength = "100" })
                                    </div>
                                </div>
                                <div class="col-xs-6">
                                    <div class="form-group">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblColCountryId" class="filter-col control-label label1">Country :</label>
                                        @Html.DropDownListFor(model => model.CountryId1, ViewBag.Country as SelectList, "Select Country", new { @class = "form-control dropdown" })
                                    </div>
                                </div>
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblState" class="filter-col control-label label1">Province :</label>
                                        @Html.DropDownListFor(model => model.StateId1, ViewBag.Province as SelectList, "Select Province", new { @id = "selState",@class = "form-control dropdown" })
                                        @*<select id="selState" name="selState" style="color: black" class="form-control dropdown"></select>*@
                                        @*@Html.DropDownList("selState", new SelectList(string.Empty, "Value", "Text"), "Select Province", new { @class = "form-control dropdown" })*@
                                        <div class="form-group input-field-wrap">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblCity" class="filter-col control-label label1">City :</label>
                                        @Html.DropDownListFor(model => model.CityId1, ViewBag.City as SelectList, "Select City", new { @id = "selCity",@class = "form-control dropdown" })
            
                                        @*<select id="selCity" name="selCity" style="color: black" class="form-control dropdown"></select>*@
                                        @*@Html.DropDownList("selCity", new SelectList(string.Empty, "Value", "Text"), "Select City", new { @class = "form-control dropdown" })*@
                                    </div>
                                </div>
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblPincode" class="filter-col control-label label1">Pincode :</label>
                                        @Html.TextBoxFor(model => model.Pincode, new { @class = "form-control input-sm", @onkeypress = "return isNumber(event)", @onblur = "checkLengthForPincode(this)", @maxlength = "6" })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-xs-6">
                                    <label id="lblPhoneNo" class="filter-col control-label label1">Mobile No :</label>
                                </div>
                                <div class="col-xs-6">

                                    <label id="lblEmailId" class="filter-col control-label label1">Email Id :</label>
                                </div>
                            </div>


                            <div class="row">
                                <div class="col-xs-2">
                                    <div class="form-group">
                                        @Html.TextBoxFor(model => model.code, new { @class = "form-control input-sm", @readonly = "true" })
                                    </div>
                                </div>
                                <div class="col-xs-4">
                                    <div class="form-group">
                                        @Html.TextBoxFor(model => model.StudentContactNo, new { @class = "form-control input-sm", @onkeypress = "return isNumber(event)", @onblur = "checkLengthForContact(this)", @maxlength = "10" })
                                    </div>
                                </div>
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        @Html.TextBoxFor(model => model.StudentEmailId, new { @class = "form-control input-sm", @onblur = "return validateEmail(this)", @maxlength = "50" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-4">
                                    @Html.HiddenFor(Model => Model.AddressChangedCount)
                                    <input type="button" id="btnAddChange" value="Change Address" hidden="hidden" />
                                </div>
                                <div class="col-xs-4">
                                </div>
                                <div class="col-xs-4">
                                </div>
                            </div>
                        </fieldset>
                        <br />
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">
                                <label id="lblGarDet" class="filter-col control-label label2">Guardian Details </label>
                            </legend>
                            <div class="row">
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblLGNID" class="filter-col control-label label1">Guardian NRC :</label>
                                        @Html.TextBoxFor(model => model.GarNID, new { @class = "form-control input-sm", @onkeypress = "return isNRCNumber(event)", @onblur = " checkLengthForNRC(this)", @maxlength = "13" })
                                    </div>
                                </div>
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblGName" class="filter-col control-label label1">Guardian Name :</label>
                                        @Html.TextBoxFor(model => model.GarName, new { @class = "form-control input-sm", @onkeypress = "return AllowAlphabet(event)", @maxlength = "100" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-6">
                                    <label id="lblGContact" class="filter-col control-label label1">Contact Details :</label>
                                </div>
                                <div class="col-xs-6">
                                    <label id="lblGRe" class="filter-col control-label label1">Relationship :</label>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-2">
                                    <div class="form-group">
                                        @Html.TextBoxFor(model => model.code1, new { @class = "form-control input-sm", @readonly = "true" })
                                    </div>
                                </div>
                                <div class="col-xs-4">
                                    <div class="form-group">
                                        @Html.TextBoxFor(model => model.GarContact, new { @class = "form-control input-sm", @onkeypress = "return isNumber(event)", @onblur = "checkLengthForContact(this)", @maxlength = "10" })
                                    </div>
                                </div>
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        @Html.DropDownListFor(model => model.RelationId, ViewBag.Relationship as SelectList, "Select Relationship" , new { @class = "form-control dropdown " })
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <div class="row">
                            <div class="col-xs-5">
                            </div>
                            <div class="col-xs-4">
                                <input type="button" id="btnNext" value="Next" />
                            </div>
                            <div class="col-xs-3">
                            </div>
                        </div>
                        @*   }*@
                    </div>
                    <div id="tabs-2" class="tab-pane">
                        <br />
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">
                                <label id="lblLoanType" class="filter-col control-label label2">Loan Details </label>
                            </legend>
                            <div class="row">
                                <div class="col-xs-4">
                                    <div class="form-group">
                                        <label id="lblLAcNo" class="filter-col control-label label1">Loan Account Number :</label>
                                        @Html.TextBoxFor(model => model.LoanAccountNo, new { @class = "form-control input-sm", @onkeypress = "return isNumber(event)", @maxlength = "20" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-4">
                                    <div class="form-group">
                                        <label id="lblLAY" class="filter-col control-label label1">Academic Year :</label>
                                        @Html.DropDownList("selAcademicYear", new SelectList(string.Empty, "Value", "Text"), "Select Academic Year", new { @class = "form-control dropdown" })
                                    </div>
                                </div>
                                <div class="col-xs-4">
                                    <div class="form-group">
                                        <label id="lblC" class="filter-col control-label label1">Course:</label>
                                        @Html.DropDownList("selCourse", new SelectList(string.Empty, "Value", "Text"), "Select Course", new { @class = "form-control dropdown" })
                                        @*@Html.DropDownListFor(model => model.CourseId, ViewBag.Course as SelectList,"Select Course" , new { @id = "selCourse", @class = "form-control dropdown " })*@
                                    </div>
                                </div>
                                <div class="col-xs-4">
                                    <div class="form-group">
                                        <label id="lblLC" class="filter-col control-label label1">College :</label>
                                        @Html.DropDownList("selCollege", new SelectList(string.Empty, "Value", "Text"), "Select College", new { @class = "form-control dropdown" })
                                        @*@Html.DropDownListFor(model => model.CollegeId, ViewBag.College as SelectList,"Select College" ,new { @id = "ddlCollege", @class = "form-control dropdown " })*@

                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-4">
                                    <div class="form-group">
                                        <label id="lblLFee" class="filter-col control-label label1">Fee :</label>
                                        @Html.TextBoxFor(model => model.Fee, new { @class = "form-control input-sm", @onkeypress = "return isNumber(event)", @maxlength = "20" })
                                    </div>
                                </div>
                                <div class="col-xs-4">
                                    <div class="form-group">
                                        <label id="lblLT" class="filter-col control-label label1">Loan Type:</label>
                                        @Html.DropDownListFor(model => model.LoanTypeId, ViewBag.LoanType as SelectList, new { @class = "form-control dropdown " })
                                    </div>
                                </div>
                                <div class="col-xs-4">
                                    <div class="form-group">
                                        <label id="lblLDt" class="filter-col control-label label1">Loan Date:</label>
                                        @Html.TextBoxFor(model => model.LoanAccountDate, new { @type = "date", @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-4">
                                    <div class="form-group">
                                        <label id="lblLAccNo" class="filter-col control-label label1">Loan Amount :</label>
                                        @Html.TextBoxFor(model => model.LoanAmount, new { @class = "form-control input-sm", @onkeypress = "return isNumber(event)", @maxlength = "20" })
                                    </div>
                                </div>
                                <div class="col-xs-4">
                                    <div class="form-group">
                                        <label id="lblDisAmt" class="filter-col control-label label1">Disburse Amount :</label>
                                        @Html.TextBoxFor(model => model.DisburseAmount, new { @class = "form-control input-sm", @onkeypress = "return isNumber(event)", @maxlength = "20" })
                                    </div>
                                </div>
                               @* <div class="col-xs-4">
                                    <div class="form-group">
                                        <label id="lblDisDt" class="filter-col control-label label1">Disburse Date:</label>
                                        @Html.TextBoxFor(model => model.DisburseDate, new { @type = "date", @class = "form-control" })
                                    </div>
                                </div>*@
                                             <div class="col-xs-4">
                                    <div class="form-group">
                                        <label id="lblBA" class="filter-col control-label label1">Balance Amount :</label>
                                        @Html.TextBoxFor(model => model.BalanceAmount, new { @class = "form-control input-sm", @onkeypress = "return isNumber(event)", @maxlength = "20" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                   
                                <div class="col-xs-4">
                                    <div class="form-group">
                                        @{
    ////List<SelectListItem> listItems1 = new List<SelectListItem>();
    ////listItems1.Add(new SelectListItem
    ////{
    ////    Text = "Active",
    ////    Value = "A"
    ////});
    ////listItems1.Add(new SelectListItem
    ////{
    ////    Text = "Leave", 
    ////    Value = "L",

    ////});
    ////listItems1.Add(new SelectListItem
    ////{
    ////    Text = "Left Company",
    ////    Value = "LC",

    ////});
                                            List<SelectListItem> listItems1 = new List<SelectListItem>();
                                            listItems1.Add(new SelectListItem
                                            {
                                                Text = "Active",
                                                Value = "A"
                                            });
                                            listItems1.Add(new SelectListItem
                                            {
                                                Text = "Close",
                                                Value = "C",

                                            });
    
    
                                        }
                                        <label id="lblStatus" class="filter-col control-label label1">Status :</label>
                                        @Html.DropDownListFor(model => model.Status, listItems1, new { @class = "form-control dropdown" })
                                    </div>
                                </div>
                                <div class="col-xs-4">
                                    <div class="form-group">
                                        <label id="lblCloDt" class="filter-col control-label label1">Closure Date:</label>
                                        @Html.TextBoxFor(model => model.ClosureDate, new { @type = "date", @class = "form-control", @maxDate = "0D" })
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <div class="row">
                            <div class="col-xs-12">
                                <div class="form-group">
                                    <label id="lblRemark" class="filter-col control-label label1">Remark :</label>
                                    @Html.TextAreaFor(model => model.Remark, new { @class = "form-control input-sm" })
                                </div>
                            </div>
                        </div>
                        <br />

                        @*    }*@
                        @*   <div class="row">        
                                     <div class="col-xs-5">
                                                </div>
                                                <div class="col-xs-1">
                                                    <div class="form-group">
                                                     
                                                    </div>
                                                </div>
                                                <div class="col-xs-6">
                                                </div>
                                        </div>*@
                        <div class="row">
                            <div class="col-xs-5">
                            </div>
                            <div class="col-xs-4">
                                <input type="button" id="btnPrevious" value="Previous" style="display: none" />&nbsp;&nbsp;
                                        <input type="button" id="btnNext1" value="Next" />

                                @*<input type="button" id="btnNext" value="Next" />*@
                            </div>
                            <div class="col-xs-3">
                            </div>
                        </div>
                    </div>

                    <div id="tabs-3" class="tab-pane">

                        <br />
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">
                                <label id="lblDisbursement" class="filter-col control-label label2">Disbursement Details </label>
                            </legend>

                            <div class="row">

                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblAY" class="filter-col control-label label1">Academic year :</label>
                                        @*@Html.DropDownListFor(model => model.AcademicYeaId, ViewBag. as SelectList, new { @class = "form-control dropdown " })*@
                                        @Html.DropDownList("selAY", new SelectList(string.Empty, "Value", "Text"), "Select Academic Year", new { @class = "form-control dropdown" })



                                    </div>
                                </div>

                                <div class="col-xs-6">
                                    <div class="form-group">

                                        <label id="lblCY" class="filter-col control-label label1">Course Year :</label>
                                        @*@Html.DropDownListFor(model => model.AcademicYeaId, ViewBag. as SelectList, new { @class = "form-control dropdown " })*@

                                        @Html.DropDownList("selCourseYear", new SelectList(string.Empty, "Value", "Text"), "Select Course Year", new { @class = "form-control dropdown" })
                                    </div>
                                </div>


                            </div>
                            <div class="row">

                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblDFees" class="filter-col control-label label1">Disbursed Fee:</label>
                                        @Html.TextBoxFor(model => model.DFees, new { @class = "form-control input-sm", @onkeypress = "return isNumber(event)", @maxlength = "20" })


                                    </div>
                                </div>

                                <div class="col-xs-6">
                                    <div class="form-group">

                                          @{
    List<SelectListItem> listItems2 = new List<SelectListItem>();
    listItems2.Add(new SelectListItem
    {
        Text = "Select",
        Value = "-1"
      
    });
    listItems2.Add(new SelectListItem
    {
        Text = "Cheque",
        Value = "H"
    });
    listItems2.Add(new SelectListItem
    {
        Text = "Cash",
        Value = "C",

    });
    
                                        }

                                        <label id="lblpaymode" class="filter-col control-label label1">Payment Mode :</label>
                                        @Html.DropDownListFor(model => model.PayMode, listItems2, new { @class = "form-control dropdown " })



                                    </div>
                                </div>


                            </div>

                            <div class="row">

                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblIssuedBy" class="filter-col control-label label1">Issued By :</label>
                                        @Html.TextBoxFor(model => model.issuedBy, new { @class = "form-control input-sm"})


                                    </div>
                                </div>
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblIssuedDate" class="filter-col control-label label1">Issued Date :</label>
                                        @Html.TextBoxFor(model => model.issuedDate, new { @type = "date", @class = "form-control" })
                                    </div>
                                </div>

                            </div>

                            <div class="row">
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblTranNo" class="filter-col control-label label1">Transaction/Cheque No:</label>
                                        @*@Html.DropDownListFor(model => model.BName, ViewBag.LoanType as SelectList, new { @class = "form-control dropdown " })*@
                                        @Html.TextBoxFor(model => model.TranNo, new { @class = "form-control input-sm", @maxlength = "15" })

                                    </div>
                                </div>
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblTranDate" class="filter-col control-label label1">Transaction/Cheque Date:</label>
                                        @Html.TextBoxFor(model => model.TranDate, new { @type = "date", @class = "form-control" })


                                        @*@Html.TextBoxFor(model => model.BrName,  new { @class = "form-control input-sm", @onkeypress = "return isNumber(event)" })*@
                                    </div>
                                </div>
                            </div>




                            <div class="row" id="BankBranch">
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblBankName" class="filter-col control-label label1">Bank Name:</label>
                                        @Html.DropDownListFor(model => model.BName, ViewBag.BankName as SelectList,"Select" ,new { @class = "form-control dropdown " })
                                    </div>
                                </div>
                                <div class="col-xs-6">
                                    <div class="form-group">
                                        <label id="lblBrName" class="filter-col control-label label1">Branch Name:</label>

                                        @Html.DropDownList("selBranch", new SelectList(string.Empty, "Value", "Text"), "Select", new { @class = "form-control dropdown" })



                                        @*@Html.DropDownListFor(model => model.BrName, ViewBag.LoanType as SelectList, new { @class = "form-control dropdown " })*@

                                        @*@Html.TextBoxFor(model => model.BrName,  new { @class = "form-control input-sm", @onkeypress = "return isNumber(event)" })*@
                                    </div>
                                </div>
                            </div>

                              
                            <div class="row">
                                <div class="col-xs-5">
                                </div>
                                <div class="col-xs-4">

                                    <input type="Button" id="btnadd" value="Add" />


                                </div>
                                <div class="col-xs-3">
                                </div>
                            </div>

                             <div class="row">
                                <div class="col-xs-5">
                                    &nbsp;
                                </div>
                                <div class="col-xs-4">
                                    &nbsp;
                                    </div>
                                <div class="col-xs-3">
                                    &nbsp;
                                </div>
                            </div>

                            <div class="row">

                                <div id="grid" class="panel panel-primary" style="overflow: auto; min-width: 100px"></div>
                                @*  </div>
                                            </div>*@


                            </div>


                            <div class="row">
                                   <div class="col-xs-5">
                                </div>
                                <div class="col-xs-4">
                                    <div class="form-group">
                                        <input type="button" id="btnPrevious1" value="Previous" style="display: none" />
                                        @*<button id="btnSave" type="submit" name="ADD" formmethod="post">Save</button>*@
                                        <input type="button" id="btnSave" value="Save"  />

                                    </div>
                                </div>
                                  <div class="col-xs-3">
                                </div>

                            </div>



                        </fieldset>

                    </div>

                </div>
            </div>
        </div>
    </div>
@*</div>*@ 
    
@*}*@


<script type="text/javascript">


    $("#btnSave").click(function () {
        debugger;
        var CheckValidation = CheckRequiredField();
        if (CheckValidation == false) {
            return false;
        }

        /////////EducationLoanDisbursment////////
        var NId1 = $("#NId").val().trim();
        var code1 = $("#code").val();
        var StudentContactNo1 = $("#StudentContactNo").val();
        var StudentEmailId1 = $("#StudentEmailId").val();
        var Course = $("#selCourse").val();
        var College = $("#selCollege").val();
        var DAmount = $("#DisburseAmount").val();
        var LoanAcDate = $("#LoanAccountDate").val();
        var LoanAmt=$("#LoanAmount").val();
        var AutoGenNumber = $("#LoanAccountNo").val();
        var AcdemicYID = $("#selAcademicYear").val();
        var BalAmt = $("#BalanceAmount").val();
        var RM = $("#Remark").val();
        var RId = $("#RelationId").val();
        var GName = $("#GarName").val();
        var GNID = $("#GarNID").val();
        var GCode = $("#code1").val();
        var GContact = $("#GarContact").val();
        ///////ContactDetails//////
        var AddressCount = "1";
     //   var AddressCount = $('#AddressChangedCount').val('1');
        var Add1 = $("#Address1").val();
        var Add2 = $("#Address2").val();
        var Add3 = $("#Address3").val();
        var ContryID = $("#CountryId1").val();
        var sateID = $("#selState").val();
        var cityID = $("#selCity").val();
        var Pinc = $("#Pincode").val();
        ///////////IndividualCustomerMasters///// 
        var FName = $("#FirstName").val();
        var MName = $("#MiddleName").val();
        var LName = $("#LastName").val();
        var Gender = $("#Sex").val();
        var DOB = $("#DateOfBirth").val();
        var TitleId = $("#TitleId1").val();
        var natinality= $("#NationalityId").val();
        ///////////EduLoanDisbusementChild///// 
        var AcademicID = $("#AcademicID").val();
        var DFee = $("#lbldf").val();
        var PayMode = $("#PAYID").val();
        var issuedBy = $("#lblissuedBy").val();
        var issuedDate = $("#lblissuedDate").val();
        var courseYearID = $("#lblCY12").val();
        var TranNo1 = $("#lblTranNo12").val();
        var TranDate = $("#lblTranDate12").val();
        var lblPayMode = $("#lblPayMode").val();
        var BName;
        var selBranch;

   



        if (lblPayMode == "Cheque") {
         BName = $("#BNameID").val();
        selBranch = $("#selBranchID").val();
        }
        else {
             BName = null;
             selBranch = null;
        }

        var Data12 = {
            NId: NId1,
            code:code1,
            StudentContactNo: StudentContactNo1,
            StudentEmailId: StudentEmailId1,
            CourseId:Course,
            CollegeId: College,
            DisburseAmount: DAmount,
            LoanAmount: LoanAmt,
            AutoGenrateNumber: AutoGenNumber,
            LoanAccountDate: LoanAcDate,
            AcaYId: AcdemicYID,
            BalanceAmount: BalAmt,
            Remark:RM,
            RelationId:RId,
            GarName: GName,
            GarNID: GNID,
            code1: GCode,
            GarContact: GContact,
            AddressChangedCount: AddressCount,
            Address1:Add1,
            Address2:Add2,
            Address3: Add3,
            CountryId1: ContryID,
            StateId1:sateID,
            CityId1: cityID,
            Pincode: Pinc,
            FirstName: FName,
            MiddleName: MName,
            LastName: LName,
            Sex:Gender,

            DateOfBirth: DOB,
            TitleId1: TitleId,
            NationalityId:natinality,

            //////////////////////
            AcademicYeaId: AcademicID,
            courseyear: courseYearID,
            DFees: DFee,
            PayMode: PayMode,
            issuedBy: issuedBy,
            issuedDate: issuedDate,
            TranNo: TranNo1,
            TranDate: TranDate,
            BName: BName,
            BrName: selBranch
        }
        debugger;


        var Details = JSON.stringify(Data12);

        var url = '@Url.Action("ADD", "EducationLoanDisbursment")';
        $.ajax({
            url: url,
            data: { childData: Details },
            dataType: 'json',
            type: 'POST',
            success: function (data) {
            
                var a = JSON.stringify(data);
                if (a == "true") {
                    debugger
                    alert('Data saved successfully!');
                    window.location.href = '/EducationLoanDisbursment/AddEducationLoanDisbursement';
                }

            },
            error: function (data) {
                alert("Data Saved Falied");
            }
        });

      });








    var currentTab = 0;
    $(function () {
        debugger;
        $("#tabs").tabs({
            disabled: [0, 1, 2],
            select: function (e, i) {
                currentTab = i.index;
                return currentTab;
            }
        });
    });




    $("#btnNext1").click(function () {
        debugger;
        var selectedTab = currentTab;
        var b = selectedTab + 1;

        var tabs = $('#tabs').tabs();
        var c = $('#tabs').tabs("length");
        currentTab = currentTab == (c - 1) ? currentTab : (currentTab + 1);
        if (currentTab == (c - 1)) {
            $("#btnNext1").hide();
            $("#btnPrevious1").show();

            tabs.tabs('enable', b);
            tabs.tabs('option', 'active', b);
            tabs.tabs('option', 'selected', b);

            var c = tabs.find("ul li").size();
            for (var i = 0; i < c; i++) {
                tabs.tabs('disable', i);
            }
        }
        else {

            $("#btnNext1").show();
            $("#btnPrevious1").show();
            //tabs.tabs('select', currentTab);
            tabs.tabs('enable', b);
            tabs.tabs('option', 'active', b);
            tabs.tabs('option', 'selected', b);

            var c = tabs.find("ul li").size();
            for (var i = 0; i < c; i++) {
                tabs.tabs('disable', i);
            }
        }
    });
    $("#btnNext").click(function () {
        debugger;

        //$("#Sex").val('-- Select Gender --');



        var url3 = '@Url.Action("GenerateLoanACNo", "EducationLoanDisbursment")';
        $.post(url3, function (data) {
            debugger;
            $('#LoanAccountNo').val(data)
        });



        var selectedTab = currentTab;
        var b = selectedTab + 1;

        var tabs = $('#tabs').tabs();
        var c = $('#tabs').tabs("length");
        currentTab = currentTab == (c - 1) ? currentTab : (currentTab + 1);
        if (currentTab == (c - 1)) {
            $("#btnNext").hide();
            $("#btnPrevious").show();

            tabs.tabs('enable', b);
            tabs.tabs('option', 'active', b);
            tabs.tabs('option', 'selected', b);

            var c = tabs.find("ul li").size();
            for (var i = 0; i < c; i++) {
                tabs.tabs('disable', i);
            }


            //tabs.tabs('select', currentTab);
        } else {

            $("#btnNext").show();
            $("#btnPrevious").show();
            //tabs.tabs('select', currentTab);
            tabs.tabs('enable', b);
            tabs.tabs('option', 'active', b);
            tabs.tabs('option', 'selected', b);

            var c = tabs.find("ul li").size();
            for (var i = 0; i < c; i++) {
                tabs.tabs('disable', i);
            }
        }
    });
    $("#btnPrevious").click(function () {
        debugger;
        var selectedTab = currentTab;
        var b = selectedTab - 1;
        var tabs = $('#tabs').tabs();
        var c = $('#tabs').tabs("length");
        currentTab = currentTab == 0 ? currentTab : (currentTab - 1);


        if (currentTab < (c - 1)) {
            $("#btnNext").show();
            $("#btnPrevious").show();

            tabs.tabs('enable', b);
            tabs.tabs('option', 'active', b);
            tabs.tabs('option', 'selected', b);

            var c = tabs.find("ul li").size();
            for (var i = 0; i < c; i++) {
                tabs.tabs('disable', i);
            }
            //tabs.tabs('select', currentTab);
        }

        if (currentTab == 0) {
            $("#btnNext").show();
            $("#btnPrevious").hide();

            tabs.tabs('enable', b);
            tabs.tabs('option', 'active', b);
            tabs.tabs('option', 'selected', b);

            var c = tabs.find("ul li").size();
            for (var i = 0; i < c; i++) {
                tabs.tabs('disable', i);
            }
            //tabs.tabs('select', currentTab);

        }

    });



    $("#btnPrevious1").click(function () {
        debugger;
        var selectedTab = currentTab;
        var b = selectedTab - 1;
        var tabs = $('#tabs').tabs();
        var c = $('#tabs').tabs("length");
        currentTab = currentTab == 0 ? currentTab : (currentTab - 1);


        if (currentTab < (c - 1)) {
            $("#btnNext1").show();
            $("#btnPrevious1").show();

            tabs.tabs('enable', b);
            tabs.tabs('option', 'active', b);
            tabs.tabs('option', 'selected', b);

            var c = tabs.find("ul li").size();
            for (var i = 0; i < c; i++) {
                tabs.tabs('disable', i);
            }
            //tabs.tabs('select', currentTab);
        }

        if (currentTab == 0) {
            $("#btnNext1").show();
            $("#btnPrevious1").hide();

            tabs.tabs('enable', b);
            tabs.tabs('option', 'active', b);
            tabs.tabs('option', 'selected', b);

            var c = tabs.find("ul li").size();
            for (var i = 0; i < c; i++) {
                tabs.tabs('disable', i);
            }
            //tabs.tabs('select', currentTab);

        }

    });
  


    $("#btnadd").click(function () {
        debugger;


 
        var AYID = $("#selAY").val();
        var AcdemicYear = $("#selAY option:selected").text();
     //   var courseYearID = $("#selCourseYear").val();
        var courseYear = $("#selCourseYear option:selected").text();

        var DFee = $("#DFees").val();
        var PayModeTYPE = $("#PayMode").val();
        var PayMode = $("#PayMode option:selected").text();
        var PM = $("#PayMode option:selected").text();
        var issuedBy = $("#issuedBy").val();
        var issuedDate = $("#issuedDate").val();
        var TranNo = $("#TranNo").val();
        var TranDate = $("#TranDate").val();
        if (PM == "Cheque") {
            var BNameID = $("#BName").val();
            var BranchID = $("#selBranch").val();
            var BName = $("#BName option:selected").text();
            var Branch = $("#selBranch option:selected").text();

        }
        else {
            BName = "-";
            selBranch = "-";
        }



      

      
      
     
        if (BName == "Select") {
            BName = "-";
        }
        if (selBranch == "Select") {
            selBranch = "-";
        }
      
        if (AYID == "") {

           alert("Please Select Academic Year");
            return false;
        }
        if (courseYear == "") {
            alert("Please Select Course Year");
            return false;
        }

        if (DFee == "") {

            alert("Please Enter Disbursement Fees");
            return false;
        }
        if (PayMode == "") {
            alert("Please Select Payment Mode");
            return false;
        }
        if (issuedBy == "") {
            alert("Please Enter Issued By");
            return false;
        }
        if (issuedDate == "") {
            alert("Please Enter Issued Date");
            return false;
        }
        if (TranNo == "") {
            alert("Please Enter Transaction/Cheque No");
            return false;
        }
        if (TranDate == "") {
            alert("Please Enter Transaction/Cheque Date");
            return false;
        }
        if (PM == "Cheque") {
            if (BName == "") {
                alert("Please Select Bank Name");
                return false;
            }
            if (BName == "Select") {
                alert("Please Select Bank Name");
                return false;
            }
            if (BName == "") {
                alert("Please Select Branch Name");
                return false;
            }
            if (BName == "Select") {
                alert("Please Select Branch Name");
                return false;
            }

        }
            debugger;
          


            var newRow = '<table id="disburseAmt1" class="table"><tr>';
            newRow += '<td width="10px"><label for="lblAY1" style="border: none;text-align:center; width: 150px;" >Academic Year</label></td>';
            newRow += '<td width="10px"><label for="lblCourseYear1" style="border: none;text-align:center; width: 150px;" >Course Year</label></td>';
            newRow += '<td width="10px"><label for="lblDFee1" style="border: none;text-align:center; width: 150px;" >Disbursed Fee</label></td>';
            newRow += '<td width="10px"><label for="lblPM1" style="border: none;text-align:center; width: 150px;" >Payment Mode</label></td>';
            newRow += '<td width="10px"><label for="lblissueBy1" style="border: none;text-align:center; width: 150px;" >Issue By</label></td>';
            newRow += '<td width="10px"><label for="lblissueDate1" style="border: none;text-align:center; width: 150px;" >Issue Date</label></td>';
            newRow += '<td width="10px"><label for="lbltranno1" style="border: none;text-align:center; width: 150px;" >Transaction/Cheque No</label></td>';
            newRow += '<td width="10px"><label for="lbltranDate1" style="border: none;text-align:center; width: 150px;" >Transaction/Cheque Date</label></td>';
            newRow += '<td width="10px"><label for="lblBName1" style="border: none;text-align:center; width: 150px;" >Bank Name</label></td>';
            newRow += '<td width="10px"><label for="lblBrName1" style="border: none;text-align:center; width: 150px;" >Branch Name</label></td>';
            newRow += '</tr>';
            newRow += '<tr>';
           
            //newRow += '<tr><td><label for="lblAY">' + AcdemicYear + '</label></td>';
            //newRow += '<td><label for="lblCY">' + courseYear + '</label></td>';
            //newRow += '<td><label for="lbldf">' + DFee + '</label></td>';
            //newRow += '<td><label for="lblPayMode">' + PayMode + '</label></td>';
            //newRow += '<td><label for="lblissuedBy">' + issuedBy + '</label></td>';
            //newRow += '<td><label for="lblissuedDate">' + issuedDate + '</label></td>';
            //newRow += '<td><label for="lblTranNo">' + TranNo + '</label></td>';
            //newRow += '<td><label for="lblTranDate">' + TranDate + '</label></td>';
            //newRow += '<td><label for="lblBName">' + BName + '</label></td>';
        //newRow += '<td><label for="lblselBranch">' + selBranch + '</label></td>';


            newRow += '<tr>';
            newRow += '<td width="10px"><input  type="text" id="AcademicID" style="display: none; text-align:center; width: 150px;"  readonly="true" value=' + AYID + '><input  type="text" id="AYID" style="border: none; text-align:center; width: 150px;"  readonly="true" value="' + AcdemicYear + '"></td>';
            newRow += '<td width="10px"> <input   type="text" id="lblCY12" style="border: none;text-align:center; width: 150px;" readonly="true"  value=' + courseYear + '></td>';
            newRow += '<td width="10px"  class="numeric"> <input  type="text" id="lbldf" style="border: none;text-align:center; width: 150px;"  readonly="true" onkeypress = "return isNumber(event)" maxlength=20 value=' + DFee + '></td>';
            newRow += '<td width="10px"><input  type="text" id="PAYID" style="display: none; border: none;text-align:center; width: 150px;"  readonly="true"  value=' + PayModeTYPE + '> <input  type="text" id="lblPayMode" style="border: none;text-align:center; width: 150px;"  readonly="true"  value="' + PayMode + '"></td>';

            newRow += '<td width="10px"> <input  type="text" id="lblissuedBy" style="border: none;text-align:center; width: 150px;"  readonly="true" value="' + issuedBy + '"></td>';
            newRow += '<td width="10px"> <input  type="text" id="lblissuedDate" style="border: none;text-align:center; width: 150px;"  readonly="true" value=' + issuedDate + '></td>';
            newRow += '<td width="10px"> <input  type="text" id="lblTranNo12" style="border: none;text-align:center; width: 150px;"  readonly="true" value="' + TranNo + '"></td>';
            newRow += '<td width="10px"> <input type="text" id="lblTranDate12" style="border: none;text-align:center; width: 150px;"  readonly="true"  value=' + TranDate + '></td>';


            newRow += '<td width="10px"> <input  type="text" id="BNameID" style="display: none; border: none; text-align:center; width: 150px;"  readonly="true" onkeypress = "return isNumber(event)" value=' + BNameID + '><input type="text" id="lblBName" style="border: none; text-align:center; width: 150px;"  readonly="true" onkeypress = "return isNumber(event)" value="' + BName + '"></td>';
            newRow += '<td width="10px"> <input  type="text" id="selBranchID" style="display: none; border: none; text-align:center; width: 150px;"  readonly="true" onkeypress = "return isNumber(event)"  value=' + BranchID + '><input  type="text" id="lblselBranch" style=" border: none; text-align:center; width: 150px;"  readonly="true" onkeypress = "return isNumber(event)"  value="' + Branch + '"></td>';
        //tablerow += '</tr>';
      

            //newRow += '<tr><td width="10px"> <input class ="tbl1" style="border: none; width: 10px" readonly="true" type="text" id="AYID" value="' + AcdemicYear + '"><input class ="tbl1" style="display: none; width: 10px" readonly="true" type="text" id="AcademicID" value="' + AYID + '"> </td>';
            //newRow += '<td width="10px"> <input class ="tbl1" style="border: none; width: 10px" readonly="true" type="text" id="lblCY12" value="' + courseYear + '"> </td>';
            //newRow += '<td width="10px"> <input class ="tbl1" style="border: none; width: 10px" readonly="true" type="text" id="lbldf" value="' + DFee + '"></td>';
            //newRow += '<td width="10px"> <input class ="tbl1" style="border: none; width: 10px" readonly="true" type="text" id="lblPayMode" value="' + PayMode + '"><input class ="tbl1" style="display: none; width: 10px" readonly="true" type="text" id="PAYID" value="' + PayModeTYPE + '"></td>';
            //newRow += '<td width="10px"> <input class ="tbl1" style="border: none; width: 10px" readonly="true" type="text" id="lblissuedBy" value="' + issuedBy + '"></td>';
            //newRow += '<td width="10px"> <input class ="tbl1" style="border: none; width: 10px" readonly="true" type="text" id="lblissuedDate" value="' + issuedDate + '"></td>';
            //newRow += '<td width="10px"> <input class ="tbl1" style="border: none; width: 10px" readonly="true" type="text" id="lblTranNo12" value="' + TranNo + '"></td>';
            //newRow += '<td width="10px"> <input class ="tbl1" style="border: none; width: 10px" readonly="true" type="text" id="lblTranDate12" value="' + TranDate + '"></td>';
            //newRow += '<td width="10px"> <input class ="tbl1" style="border: none; width: 10px" readonly="true" type="text" id="lblBName" value="' + BName + '"><input class ="tbl1" style="display: none; width: 10px" readonly="true" type="text" id="BNameID" value="' + BNameID + '"></td>';
            //newRow += '<td width="10px"> <input class ="tbl1" style="border: none; width: 10px" readonly="true" type="text" id="lblselBranch" value="' + Branch + '"><input class ="tbl1" style="display: none; width: 10px" readonly="true" type="text" id="selBranchID" value="' + BranchID + '"></td>';

            //newRow += '<td><label for="lblCY">' + courseYear + '</label></td>';
            //newRow += '<td><label for="lbldf">' + DFee + '</label></td>';
            //newRow += '<td><label for="lblPayMode">' + PayMode + '</label></td>';
            //newRow += '<td><label for="lblPayMode">' + issuedBy + '</label></td>';
            //newRow += '<td><label for="lblPayMode">' + issuedDate + '</label></td>';
            //newRow += '<td><label for="lblPayMode">' + TranNo + '</label></td>';
            //newRow += '<td><label for="lblPayMode">' + TranDate + '</label></td>';
            //newRow += '<td><label for="lblPayMode">' + BName + '</label></td>';
            //newRow += '<td><label for="lblPayMode">' + selBranch + '</label></td>';


            newRow += '</tr>';
            newRow += '</table>';


            $("#grid").html(newRow);
       
            //$("#selAY option:selected").val('');
            //$("#selCourseYear option:selected").val('');
            //$("#DFees").val('');
            //$("#PayMode option:selected").text();
            //$("#issuedBy").val('');
            //$("#issuedDate").val('');
            //$("#TranNo").val('');
            //$("#TranDate").val('');
            //$("#BName option:selected").text();
            //$("#selBranch option:selected").text();
     
            clearDisDetails();
            $("#btnadd").hide();

    });

</script>

<script type="text/javascript">

    $("#CountryId1").change(function () {
        debugger;
        var countryid = $("#CountryId1").val();
        //$('#StateId1').attr("disabled", false)
        if (countryid != "") {

        var url = '@Url.Action("StateList", "EducationLoanDisbursment")';
            $.post(url, { CountryId: countryid }, function (data) {
                $("#selState").empty().append($("<option></option>").val(-1).html('Select'));
                $.each(data, function (Key, item) {
                    $("#selState").append($("<option></option>").val(item.Value).html(item.Text));
                });
            });

            var url1 = '@Url.Action("AssignCountryCode", "EducationLoanDisbursment")';
        $.post(url1, { CountryId: countryid }, function (data) {
          
            if (data != null) {
                $("#code").val(data);
                $("#code1").val(data);
            }
        });

        var url2 = '@Url.Action("AcademicYearList", "EducationLoanDisbursment")';
        $.post(url2, { CountryId: countryid }, function (data) {
            $("#selAcademicYear").empty().append($("<option></option>").val(-1).html('Select'));
            $.each(data, function (Key, item) {
                $("#selAcademicYear").append($("<option></option>").val(item.Value).html(item.Text));
            });
        });


        }

        });


    $("#selAcademicYear").focusout(function () {
        debugger;
        var AcdemicYearDisbursementid = $("#selAcademicYear option:selected").text();
        var countryid = $("#CountryId1").val();
        var ELD = $("#Id").val();
        var url3 = '@Url.Action("AcademicYearListForDisbursment", "EducationLoanDisbursment")';
        $.post(url3, { AcdemicYearDisbursementid: AcdemicYearDisbursementid, countryid: countryid, ELD: ELD }, function (data) {
            debugger;
            $("#selAY").empty().append($("<option></option>").val(-1).html('Select'));
            $.each(data, function (Key, item) {
                $("#selAY").append($("<option></option>").val(item.Value).html(item.Text));
            });
        });


    });

    $("#LoanAccountDate").focusout(function () {
        debugger;
        var dtplaon = $('#LoanAccountDate').val();
        var dtpAcaYr = $('#selAcademicYear option:selected').text();

        if (dtpAcaYr != "" && dtplaon != "") {
            var data = dtpAcaYr.split('-');
            var array = [];
            array = array.concat(data)

            var loandata = dtplaon.split('-');
            var loanarray = [];
            loanarray = loanarray.concat(loandata)

            if (parseInt(loanarray[0]) < parseInt(array[0]) || parseInt(loanarray[0]) > parseInt(array[1])) {//
                alert("Loan Account Date should be between Academic Year");
                $("#LoanAccountDate").val(' ');
            }
        }
    });

    $("#selState").change(function () {
        var Stateid = $("#selState").val();
        
        if (Stateid != "") {

     
        var url = '@Url.Action("CityList", "EducationLoanDisbursment")';
            $.post(url, { Stateid: Stateid }, function (data) {
                $("#selCity").empty().append($("<option></option>").val(-1).html('Select'));
                $.each(data, function (Key, item) {
                    $("#selCity").append($("<option></option>").val(item.Value).html(item.Text));
                });
            });
        }
        });

        $("#selAcademicYear").change(function () {

 
            var url = '@Url.Action("CourseList", "EducationLoanDisbursment")';
            $.post(url, function (data) {
                $("#selCourse").empty().append($("<option></option>").val(-1).html('Select'));
                $.each(data, function (Key, item) {
                    $("#selCourse").append($("<option></option>").val(item.Value).html(item.Text));
                });
            });
           
        });
    //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    $("#selAY").change(function () {
        debugger;
        @*        var AcademicYearId = $("#selAY").val();
        if (AcademicYearId != "") {
        var url = '@Url.Action("CourseYear", "EducationLoanDisbursment")';
        $.post(url, { AcademicYearId: AcademicYearId }, function (data) {
            debugger;
            $("#selCourseYear").empty().append($("<option></option>").val(-1).html('Select'));
                $.each(data, function (Key, item) {
                    $("#selCourseYear").append($("<option></option>").val(item.Value).html(item.Text));
                });
        });
        }*@

        var CollegeId = $("#selCollege").val();
        var CourseId = $("#selCourse").val();
        var AcademicYearId = $("#selAY").val();
        var EducationID = 0;
        var url = '@Url.Action("CourseYear", "EducationLoanDisbursment")';
        $.post(url, { AcademicYearId: AcademicYearId, CollegeId: CollegeId, CourseId: CourseId, EducationID: EducationID }, function (data) {
            debugger;
            $("#selCourseYear").empty().append($("<option></option>").val(-1).html('Select'));
            $.each(data, function (Key, item) {
                $("#selCourseYear").append($("<option></option>").val(item.Value).html(item.Text));
            });
        });

     });

    //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

    $("#BName").change(function () {
        debugger;
        var BankId = $("#BName").val();
        if (BankId != "") {


        var url = '@Url.Action("BranchMaster", "EducationLoanDisbursment")';
        $.post(url, { BankId: BankId }, function (data) {
            debugger;
            $("#selBranch").empty().append($("<option></option>").val(-1).html('Select'));
            $.each(data, function (Key, item) {
                $("#selBranch").append($("<option></option>").val(item.Value).html(item.Text));
            });
        });
        }
      });

    //////////////////////////////////////////////////////


    $("#PayMode").change(function () {
        debugger;
        var paymode = $("#PayMode").val();
        if (paymode == "C") {
            $("#BankBranch").hide();
        }
        else {
            $("#BankBranch").show();

        }
    });
    //////////////////////////////////////////////////////
    $("#selCourse").change(function () {
        debugger;

            var CourseId = $("#selCourse").val();
            var CountryId = $("#CountryId1").val();


            var Acdemicyear = $("#selAcademicYear").val();
            var NID = $("#NId").val();

            var urRepeat = '@Url.Action("checkRepeatLoan", "EducationLoanDisbursment")';
        $.post(urRepeat, { CountryId: CountryId, CourseId: CourseId, Acdemicyear: Acdemicyear, NID: NID }, function (data) {
              debugger;
              var count = data;
              if (count > 0) {
                  alert("This Course Loan Already Exits");
                  $("#selCourse").val(-1);
              }
          });
  

            if (CourseId != "" && CountryId != "") {
            var url = '@Url.Action("CollegeList", "EducationLoanDisbursment")';
            $.post(url, { CourseId: CourseId, CountryID: CountryId }, function (data) {
                $("#selCollege").empty().append($("<option></option>").val(-1).html('Select'));
                $.each(data, function (Key, item) {
                    $("#selCollege").append($("<option></option>").val(item.Value).html(item.Text));
                });
            });
            }
      
        //




    });

    ///////////////////////////////////////
    $("#selCourseYear").change(function () {
        debugger;
        AYID = $("#selAcademicYear").val();
        course = $("#selCourse").val();
        college = $("#selCollege").val();
        CourseYear = $("#selCourseYear option:selected").text();


        var urlDisAmt = '@Url.Action("getDefaultFees", "EducationLoanDisbursment")';
        $.post(urlDisAmt, { AYID: AYID, course: course, college: college, CourseYear: CourseYear }, function (data) {
            //    $("#grid").empty();
            debugger;
            $("#DFees").val(data);
          

        });

    });

    /////////////////////////////////////////

    $("#selCollege").change(function () {
        debugger;
            var CollegeId = $("#selCollege").val();
            var CourseId = $("#selCourse").val();
            var AcademicYearId1 = $("#selAcademicYear").val();
            if (CollegeId != "" && CourseId != "" && AcademicYearId1 != "") {
                var url = '@Url.Action("Fee", "EducationLoanDisbursment")';
                $.post(url, { CollegeId: CollegeId, CourseId: CourseId, AcademicYearId1: AcademicYearId1 }, function (data) {
                    if (data != null) {
                        $("#Fee").val(data);
                        $("#LoanAmount").val(data);
                        //  $("#DisburseAmount").val(data);
                        //  $("#BalanceAmount").val(data);
                    }
                });
            }



      //  $("#DisburseAmount").val('0.00');
        });
        $("#LoanAccountDate").change(function () {
            var LoanAccountDate = $("#LoanAccountDate").val();
            debugger;
         //   $('#DisburseDate').val(LoanAccountDate);

        });
        ///////////////////////////////////
       
        

    ///////////////////////////////////
        //$(function () {
        //    $('#StateId1').hide();
        //    $('#CityId1').hide();

        //    debugger;
        
        //    $('#Status').attr("disabled", true)
        //    $('#ClosureDate').attr("disabled", true)
        //    $('#LoanTypeId').attr("disabled", true)
        //    $('#LoanAccountNo').attr("readonly", true)
        //    $('#LoanAmount').attr("readonly", true)
        //    $('#DisburseAmount').attr("readonly", true)
        //    $('#BalanceAmount').attr("readonly", true)
        //    $('#Fee').attr("readonly", true)
        //    $('#DisburseDate').attr("disabled", true)

        //    var frmvalidator = new Validator("EduLoanDis");
        //    frmvalidator.clearAllValidations();
        //    frmvalidator.EnableMsgsTogether();

        //    debugger;
        //    frmvalidator.addValidation("NId", "req", "Please enter National Identification Number ");
        //    frmvalidator.addValidation("TitleId1", "req", "Please select Title");
        //    frmvalidator.addValidation("FirstName", "req", "Please enter First Name ");
        //    frmvalidator.addValidation("MiddleName", "req", "Please enter Middle Name ");
        //    frmvalidator.addValidation("LastName", "req", "Please enter Last Name ");
        //    frmvalidator.addValidation("DateOfBirth", "req", "Please select Date Of Birth");
        //    frmvalidator.addValidation("Sex", "req", "Please select Gender");
        //    frmvalidator.addValidation("NationalityId", "req", "Please select Nationality");


        //    frmvalidator.addValidation("Address1", "req", "Please enter Address");
        //    frmvalidator.addValidation("CountryId1", "req", "Please select country");
        //    frmvalidator.addValidation("selState", "req", "Please select state");
        //    frmvalidator.addValidation("selCity", "req", "Please enter city");
        //    frmvalidator.addValidation("Pincode", "req", "Please enter pin number");
        //    frmvalidator.addValidation("StudentContactNo", "req", "Please enter mobile number ");
        //    frmvalidator.addValidation("StudentEmailId", "req", "Please enter email id ");

        //    frmvalidator.addValidation("GarNID", "req", "Please enter Guardian NID Number");
        //    frmvalidator.addValidation("GarName", "req", "Please enter Guardian Name");
        //    frmvalidator.addValidation("RelationId", "req", "Please select Relationship");
        //    frmvalidator.addValidation("GarContact", "req", "Please enter Guardian Contact Number");

        //    frmvalidator.addValidation("selAcademicYear", "req", "Please select Academic Year");
        //    frmvalidator.addValidation("selCourse", "req", "Please select Course");
        //    frmvalidator.addValidation("selCollege", "req", "Please select College  ");
        //    frmvalidator.addValidation("LoanAccountDate", "req", "Please select Loan Account Date");




        //});

</script>
<script type="text/javascript">




    $('#GarNID').focusout(function () {
        debugger;
        var NID = $("#NId").val().trim();
        var GardianNID = $("#GarNID").val().trim();
        if (NID != "") {
            if (GardianNID != "") {
                if (NID == GardianNID) {
                    alert("Student National Registraion Code and Guardian National Registraion Code Should Be Different!");
                  //  $("#NId").val(' ');
                    $("#GarNID").val(' ');

                    return false;
                }
            }

        }
       
    });

    $('#NId').focusout(function () {
        debugger;
        var date = Date();
        $("#DateOfBirth").attr('min', date);

        debugger;
        var NID = $("#NId").val().trim();
        if (NID == "") {
            ClearField();
            EnableFeildForNIDfocusout();
        }
        else {
            var GardianNID = $("#GarNID").val().trim();
            if (GardianNID != "") {
                if (NID == GardianNID) {
                 
                    alert("Student National Registraion Code and Guardian National Registraion Code Should Be Different!");
                    $("#NId").val(' ');
                    return false;
                }
                else {
                    debugger;
                    $.ajax({
                        url: '/EducationLoanDisbursment/NIDDetails/',
                        type: 'POST',
                        data: { NID: NID },
                        success: function (data) {
                            debugger;
                            if (data != "null") {
                                var vdata = data;
                                debugger;
                           

                                $("#TitleId1").val(data.TitleId1);
                                $("#FirstName").val(data.FirstName);
                                $("#MiddleName").val(data.MiddleName);
                                $("#LastName").val(data.LastName);
                                $('#Sex').val(data.Sex);
                                $('#DateOfBirth').val(ToJavaScriptDate(data.DateOfBirth));
                                $('#NationalityId').val(data.NationalityId);
                                $('#Address1').val(data.Address1);
                                $('#Address2').val(data.Address2);
                                $('#Address3').val(data.Address3);
                                $('#CountryId1').val(data.CountryId1);                   
                                   $('#selState').val(data.StateId1); 
                                   $('#selCity').val(data.CityId1);
                                //$('#selState').val(data.StateId1);
                                //$('#selCity').val(data.CityId1);
                                   $('#Pincode').val(data.Pincode);


                                   $('#GarNID').val(data.GarNID);
                                   $('#GarName').val(data.GarName);
                                   $('#RelationId').val(data.RId);
                                   $('#StudentEmailId').val(data.StudentEmailId);

                                   var No = (data.StudentContactNo).split('-');
                                   $('#code').val(No[0]);
                                   $('#StudentContactNo').val(No[1]);

                                   var No1 = (data.GarContact).split('-');
                                   $('#code1').val(No1[0]);
                                   $('#GarContact').val(No1[1]);

@*                                   var MobileCode = '@(ViewBag.ADDMobileCode)';
                                   $('#code').val(MobileCode);
                                   var MobileNo = '@(ViewBag.ADDMobileNo)';
                             $('#StudentContactNo').val(MobileNo);

                      var MobileCode1 = '@(ViewBag.ADDMobileCode1)';
                        $('#code1').val(MobileCode1);
                                     var MobileNo1 = '@(ViewBag.ADDMobileNo1)';
                               $('#GarContact').val(MobileNo1);*@



                                var countryid = (data.CountryId1);
                                var url2 = '@Url.Action("AcademicYearList", "EducationLoanDisbursment")';
                                $.post(url2, { CountryId: countryid }, function (data) {
                                    $("#selAcademicYear").empty().append($("<option></option>").val(-1).html('Select'));
                                    $.each(data, function (Key, item) {
                                        $("#selAcademicYear").append($("<option></option>").val(item.Value).html(item.Text));
                                    });
                                });

                                var url3 = '@Url.Action("AcademicYearList", "EducationLoanDisbursment")';
                                $.post(url3, { CountryId: countryid }, function (data) {
                                    debugger;
                                    $("#selAY").empty().append($("<option></option>").val(-1).html('Select'));
                                    $.each(data, function (Key, item) {
                                        $("#selAY").append($("<option></option>").val(item.Value).html(item.Text));
                                    });
                                });



                                $('#StateId1').show();
                                $('#CityId1').show();
                            //    $('#selState').hide();
                           //     $('#selCity').hide();
                                //$("#selState").empty().append($("<option></option>").val(1).html('Select'));
                                //$("#selCity").empty().append($("<option></option>").val(1).html('Select'));

                                DisableFeildForNIDfocusout();
                                $('#btnAddChange').show();
                            }
                            else {
                                ClearField();
                                EnableFeildForNIDfocusout();

                            }

                        }
                    });

                }


            }
            else {
                debugger;
                $.ajax({
                    url: '/EducationLoanDisbursment/NIDDetails/',
                    type: 'POST',
                    data: { NID: NID },
                    success: function (data) {
                        debugger;
                        if (data != "null") {
                            var vdata = data;
                            debugger;
                            var No = (data.StudentContactNo);

                            //$("#selState").empty().append($("<option></option>").val(1).html('Select'));
                            //$("#selCity").empty().append($("<option></option>").val(1).html('Select'));



                            $("#TitleId1").val(data.TitleId1);
                            $("#FirstName").val(data.FirstName);
                            $("#MiddleName").val(data.MiddleName);
                            $("#LastName").val(data.LastName);
                            $('#Sex').val(data.Sex);
                            $('#DateOfBirth').val(ToJavaScriptDate(data.DateOfBirth));
                            $('#NationalityId').val(data.NationalityId);
                            $('#Address1').val(data.Address1);
                            $('#Address2').val(data.Address2);
                            $('#Address3').val(data.Address3);
                            $('#CountryId1').val(data.CountryId1);
                            //$('#StateId1').val(data.StateId1);
                            //$('#CityId1').val(data.CityId1);

                            $('#selState').val(data.StateId1);
                            $('#selCity').val(data.CityId1);

                            $('#Pincode').val(data.Pincode);

                            $('#GarNID').val(data.GarNID);
                            $('#GarName').val(data.GarName);
                            $('#RelationId').val(data.RId);
                            $('#StudentEmailId').val(data.StudentEmailId);


                            var No = (data.StudentContactNo).split('-');
                            $('#code').val(No[0]);
                            $('#StudentContactNo').val(No[1]);

                            var No1 = (data.GarContact).split('-');
                            $('#code1').val(No1[0]);
                            $('#GarContact').val(No1[1]);

                        @*    var MobileCode = @ViewBag.ADDMobileCode
                                   $('#code').val(MobileCode);
                                   var MobileNo = @ViewBag.ADDMobileNo
                                   $('#StudentContactNo').val(MobileNo);

                                   var MobileCode1 = @ViewBag.ADDMobileCode1
                             $('#code1').val(MobileCode1);
                             var MobileNo1 = @ViewBag.ADDMobileNo1
                        $('#GarContact').val(MobileNo1);*@




                            var countryid = (data.CountryId1);
                            var url2 = '@Url.Action("AcademicYearList", "EducationLoanDisbursment")';
                            $.post(url2, { CountryId: countryid }, function (data) {
                                $("#selAcademicYear").empty().append($("<option></option>").val(-1).html('Select'));
                                $.each(data, function (Key, item) {
                                    $("#selAcademicYear").append($("<option></option>").val(item.Value).html(item.Text));
                                });
                            });

                            var url1 = '@Url.Action("AssignCountryCode", "EducationLoanDisbursment")';
                            $.post(url1, { CountryId: countryid }, function (data) {
                                debugger;
                                if (data != null) {
                                    $("#code").val(data);
                                    $("#code1").val(data);
                                }
                            });


                            @*   var url3 = '@Url.Action("AcademicYearList", "EducationLoanDisbursment")';
                    $.post(url3, { CountryId: countryid }, function (data) {
                        debugger;
                        $("#selAY").empty().append($("<option></option>").val(-1).html('Select'));
                        $.each(data, function (Key, item) {
                            $("#selAY").append($("<option></option>").val(item.Value).html(item.Text));
                        });
                    });*@



                            //   $('#StateId1').show();
                            //   $('#CityId1').show();
                            //    $('#selState').hide();
                            //    $('#selCity').hide();

                            //$('#selState').val(0);
                            //$('#selCity').val(0);
                            //////////$("#TitleId1").attr("disabled", true);
                            //////////$("#FirstName").attr("readonly", true);
                            //////////$("#MiddleName").attr("readonly", true);
                            //////////$("#LastName").attr("readonly", true);
                            //////////$('#Sex').attr("disabled", true);
                            //////////$('#DateOfBirth').attr("disabled", true);
                            //////////$('#Address1').attr("readonly", true);
                            //////////$('#Address2').attr("readonly", true);
                            //////////$('#Address3').attr("readonly", true);
                            //////////$('#CountryId1').attr("disabled", true);
                            //////////$('#NationalityId').attr("disabled", true);
                            //////////$('#StateId1').attr("disabled", true);
                            //////////$('#CityId1').attr("disabled", true);
                            //////////$('#Pincode').attr("readonly", true);
                            DisableFeildForNIDfocusout();
                            $('#btnAddChange').show();
                        }
                        else {

                       
                                ClearField();
                            EnableFeildForNIDfocusout();

                     
                        }
                    }
 


        });

            }


        }

      
        });
    $("#btnAddChange").click(function () {
        $('#Address1').val('');
        $('#Address2').val('');
        $('#Address3').val('');
        $('#CountryId1').val('');
        $('#StateId1').val('');
        $('#CityId1').val('');
        $('#Pincode').val('');
        $('#CityId1').hide();
        $('#StateId1').hide();
        $('#selState').show('');
        $('#selCity').show('');
        $('#Address1').attr("readonly", false)
        $('#Address2').attr("readonly", false)
        $('#Address3').attr("readonly", false)
        $('#CountryId1').attr("disabled", false)
        $('#selState').attr("disabled", false)
        $('#selCity').attr("disabled", false)
        $('#CityId1').attr("disabled", false)
        $('#Pincode').attr("readonly", false)
        $("#selState").empty();
        $("#selCity").empty();
        $('#AddressChangedCount').val('1');
        $('#btnAddChange').hide();
        debugger;
  @*  var countryid = 0;
            var url = '@Url.Action("StateList", "EducationLoanDisbursment")';
        $.post(url, { CountryId: countryid }, function (data) {
            //debugger;
            $("#selState").empty().append($("<option></option>").val(-1).html('Select'));
            $.each(data, function (Key, item) {
                //debugger;
                $("#selState").append($("<option></option>").val(item.Value).html(item.Text));
            });
        });

        var Stateid = 0;
        var url = '@Url.Action("CityList", "EducationLoanDisbursment")';
            $.post(url, { Stateid: Stateid }, function (data) {
                          //debugger;
                $("#selCity").empty().append($("<option></option>").val(-1).html('Select'));
                          $.each(data, function (Key, item) {
                              //debugger;
                              $("#selCity").append($("<option></option>").val(item.Value).html(item.Text));
                          });
                      });*@
        });

    function ClearField() {
        $("#code").val(' ');
        $("#code1").val(' ');
       
        $("#FirstName").val(' ');
        $("#MiddleName").val(' ');
        $("#LastName").val(' ');
        
        $('#DateOfBirth').val(' ');
      
        $('#Address1').val(' ');
        $('#Address2').val(' ');
        $('#Address3').val(' ');
       
        $('#Pincode').val(' ');


        $("#TitleId1").val(' ');
        $('#Sex').val(' ');
        //$('#CountryId1').val(' ');
        //$('#StateId1').val(' ');
        //$('#CityId1').val(' ');
        //$('#NationalityId').val(' ');

        $('#GarNID').val(' ');
        $('#GarName').val(' ');
        $('#GarContact').val(' ');
        $('#StudentContactNo').val(' ');
        $('#StudentEmailId').val(' ');


        $("#TitleId1 option").filter(function () {
            return this.text == 'Select';
        }).attr('selected', true);



        $("#Sex option").filter(function () {
            return this.text == 'Select';
        }).attr('selected', true);



        $("#CountryId1 option").filter(function () {
            return this.text == 'Select Country';
        }).attr('selected', true);



        $("#selState option").filter(function () {
            return this.text == 'Select Province';
        }).attr('selected', true);


        $("#selCity option").filter(function () {
            return this.text == 'Select City';
        }).attr('selected', true);


        $("#NationalityId option").filter(function () {
            return this.text == 'Select Nationality';
        }).attr('selected', true);

        //$("#TitleId1").attr("disabled", false);
        //$("#FirstName").attr("readonly", false);
        //$("#MiddleName").attr("readonly", false);
        //$("#LastName").attr("readonly", false);
        //$('#Sex').attr("disabled", false);
        //$('#DateOfBirth').attr("disabled", false);
        //$('#NationalityId').attr("disabled", false);
        //$('#Address1').attr("readonly", false);
        //$('#Address2').attr("readonly", false);
        //$('#Address3').attr("readonly", false);
        //$('#CountryId1').attr("disabled", false);
        //$('#StateId1').attr("disabled", false);
        //$('#CityId1').attr("disabled", false);
        //$('#Pincode').attr("readonly", false);
        //$('#btnAddChange').hide();
    }
</script>

<script type="text/javascript">
    function CheckRequiredField() {
        debugger;
        var NID = $("#NId").val();
        var TitleId1 = $("#TitleId1").val();
        var FirstName = $("#FirstName").val().trim();
        var MiddleName = $("#MiddleName").val().trim();
        var LastName = $("#LastName").val().trim();

        var DateOfBirth = $("#DateOfBirth").val().trim();
        var Sex = $("#Sex").val();
        var NationalityId = $("#NationalityId").val();
        var Address1 = $("#Address1").val().trim();
        //var Address2 = $("#Address2").val();  
        //var Address3 = $("#Address3").val();
        var CountryId1 = $("#CountryId1").val().trim();
        var StateId1 = $("#selState").val().trim();
        var CityId1 = $("#selCity").val().trim();
        var Pincode = $("#Pincode").val().trim();
        var StudentContactNo = $("#StudentContactNo").val().trim();
        var StudentEmailId = $("#StudentEmailId").val().trim();
        var GarNID = $("#GarNID").val().trim();
        var GarName = $("#GarName").val().trim();
        var GarContact = $("#GarContact").val().trim();
        var RelationShipId = $("#RelationId").val().trim();

        var AcademicYeaId1 = $("#selAcademicYear").val().trim();
        var CourseId = $("#selCourse").val().trim();
        var CollegeId = $("#selCollege").val().trim();
        var Status = $("#Status").val().trim();
        ///////////////////////////////////////////////
        var Fee = $("#Fee").val().trim();
        var LoanTypeId = $("#LoanTypeId").val().trim();
        var LoanAccountDate = $("#LoanAccountDate").val().trim();
        var LoanAmount = $("#LoanAmount").val().trim();
        var DisburseAmount = $("#DisburseAmount").val().trim();
        //var DisburseDate = $("#DisburseDate").val().trim();
        var BalanceAmount = $("#BalanceAmount").val().trim();
        var CheckValidation;

        if (NID == "") {
            alert("Please Enter National Registration Code.");
            CheckValidation = false;
            return false;
          
        }
        if (TitleId1 == null) {
            alert("Please Select Title");
            CheckValidation = false;
            return false;
        }
        if (FirstName == "") {
            alert("Please Enter First Name.");
            CheckValidation = false;
         return false;
        }
        if (MiddleName == "") {
            alert("Please Enter Middle Name.");
            CheckValidation = false;
            return false;
        }
        if (LastName == "") {
            alert("Please Enter last Name.");
            CheckValidation = false;
          return false;
        }
        if (DateOfBirth == "") {
            alert("Please Select Date Of Birth.");
            CheckValidation = false;
            return false;
        }
        if (Sex == null) {
            alert("Please Select Gender.");
            CheckValidation = false;
            return false;
        }
        if (NationalityId == "") {
            alert("Please Select Natinality.");
            CheckValidation = false;
            return false;
        }
        if (Address1 == "") {
            alert("Please Enter Address.");
            CheckValidation = false;
            return false;
        }
        if (CountryId1 == "") {
            alert("Please Select Country.");
            CheckValidation = false;
            return false;
        }
        if (StateId1 == "") {
            alert("Please Select Province.");
            CheckValidation = false;
            return false;
        }
        if (CityId1 == "") {
            alert("Please Select City.");
            CheckValidation = false;
            return false;
        }
        if (Pincode == "") {
            alert("Please Enter Pincode.");
            CheckValidation = false;
            return false;
        }
        if (StudentContactNo == "") {
            alert("Please Enter StudentContactNo.");
            CheckValidation = false;
            return false;
        }
        if (StudentEmailId == "") {
            alert("Please Enter StudentEmailId.");
            CheckValidation = false;
            return false;
        }
        if (GarNID == "") {
            alert("Please Enter Guardian National Registration Code.");
            CheckValidation = false;
            return false;
        }
        if (GarName == "") {
            alert("Please Enter Guardian Name.");
            CheckValidation = false;
            return false;
        }
        if (GarContact == "") {
            alert("Please Enter Guardian Contact No.");
            CheckValidation = false;
            return false;
        }
        if (RelationShipId == 0) {
            alert("Please Select RelationShip.");
            CheckValidation = false;
            return false;
        }
        if (AcademicYeaId1 == "") {
            alert("Please Select Academic Year.");
            CheckValidation = false;
            return false;
        }
        if (CourseId == "") {
            alert("Please Select Course.");
            CheckValidation = false;
            return false;
        }
        if (CollegeId == -1) {
            alert("Please Select College.");
            CheckValidation = false;
            return false;
        }
        if (Status == "") {
            alert("Please Select Status.");
            CheckValidation = false;
            return false;

        }


        var rowCount = $('#disburseAmt1 tr').length;
        if (rowCount == 0) {
            alert("Please Enter Atleast One Disbursement Details.");
            CheckValidation = false;
            return false;
        }
       
        return CheckValidation;
    }

    function DisableFeildForNIDfocusout()
    {
        $("#TitleId1").attr("disabled", true);
        $("#FirstName").attr("readonly", true);
        $("#MiddleName").attr("readonly", true);
        $("#LastName").attr("readonly", true);
        $('#Sex').attr("disabled", true);
        $('#DateOfBirth').attr("disabled", true);
        $('#Address1').attr("readonly", true);
        $('#Address2').attr("readonly", true);
        $('#Address3').attr("readonly", true);
        $('#CountryId1').attr("disabled", true);
        $('#NationalityId').attr("disabled", true);
        $('#selState').prop("disabled", true);
        $('#selCity').prop("disabled", true);
        $('#Pincode').attr("readonly", true);



        $('#GarNID').attr("readonly", true);
        $('#GarName').attr("readonly", true);
     //   $('#code1').attr("readonly", true);
        $('#GarContact').attr("readonly", true);
        $('#RelationId').prop("disabled", true);
        $('#StudentContactNo').attr("readonly", true);
        $('#StudentEmailId').attr("readonly", true);



    }

    function EnableFeildForNIDfocusout() {
        $("#TitleId1").attr("disabled", false);
        $("#FirstName").attr("readonly", false);
        $("#MiddleName").attr("readonly", false);
        $("#LastName").attr("readonly", false);
        $('#Sex').attr("disabled", false);
        $('#DateOfBirth').attr("disabled", false);
        $('#Address1').attr("readonly", false);
        $('#Address2').attr("readonly", false);
        $('#Address3').attr("readonly", false);
        $('#CountryId1').attr("disabled", false);
        $('#NationalityId').attr("disabled", false);
        $('#selState').prop("disabled", false);
        $('#selCity').prop("disabled", false);
        $('#Pincode').attr("readonly", false);


        $('#GarNID').attr("readonly", false);
        $('#GarName').attr("readonly", false);
      //  $('#code1').attr("readonly", false);
        $('#GarContact').attr("readonly", false);
        $('#RelationId').prop("disabled", false);
        $('#StudentContactNo').attr("readonly", false);
        $('#StudentEmailId').attr("readonly", false);

    }
    function clearDisDetails() {

        debugger;
      
        $("#selAY").val(-1);
        $("#selCourseYear").val(-1);
        $("#PayMode").val(-1);
        //$("#BName").val(-1);
        $("#selBranch").val(-1);
        $("#DFees").val('');
        $("#issuedBy").val('');
        $("#issuedDate").val('');
        $("#TranNo").val('');
        $("#TranDate").val('');


        $("#BName option").filter(function () {
            return this.text == 'Select';
        }).attr('selected', true);

    }
</script>
